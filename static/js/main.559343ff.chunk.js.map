{"version":3,"sources":["AppFiles/Contexts/AppContext.js","ReusableComponents/Scroolbar/AppScrollbar.js","utilities/Consts.js","utilities/RoutesFunctions.js","utilities/FetchFunctions.js","utilities/CalculateWindowHeightHook.js","images/BgGreen2.jpg","AppFiles/AppBackground.js","images/no_image.png","ReusableComponents/PosterCard.js","AppFiles/StartPage/StartPageCards.js","images/close.svg","ReusableComponents/Searchbar/Searchbar.js","AppFiles/StartPage/StartPageSearchbar.js","AppFiles/StartPage/StartPage.js","AppFiles/Contexts/MovieSearchbarContext.js","AppFiles/Movie/MovieSearchbar/Hooks/GotoOtherRoutesHooks.js","ReusableComponents/NoResult/NoResult.js","AppFiles/Movie/MovieSearchbar/Hooks/HighlightTextInQuickSearchHooks.js","ReusableComponents/PosterLi.js","AppFiles/Movie/MovieSearchbar/Results/MovieSearchbarPCResults.js","AppFiles/Movie/MovieSearchbar/Results/MovieSearchbarPC.js","AppFiles/Movie/MovieSearchbar/Results/MovieSearchbarMobileResults.js","AppFiles/Movie/MovieSearchbar/Results/MovieSearchbarMobile.js","images/tmdb.svg","AppFiles/Movie/MovieSearchbar/MovieSearchbar.js","AppFiles/Movie/MovieSearchbar/Hooks/KeysPressedInSearchbarHooks.js","AppFiles/Movie/MovieSearchbar/Hooks/ShowHideQuickSearchHook.js","AppFiles/Movie/MovieCard/MovieCardFunctions.js","AppFiles/Movie/MovieCard/MovieCard.js","AppFiles/Movie/MoviePage.js","App.js","testingFiles/serviceWorker.js","index.js"],"names":["AppContext","createContext","AppScrollbar","props","useContext","infiniteScroll","scrollBarRef","dispPostersNum","className","onScrollDown","e","undefined","ref","children","API_KEY","BASE_API_URL","POSTER_W500","POPULAR_MOVIES_URL","PAGE_TRANSITION_TIME","QUICK_SEARCH_TRANSITION","getCurrentPageUrl","location","pathname","substring","lastIndexOf","getMovieIdFromLocationPathname","getMoviesDataToDisplayInSearch","input","a","getAllMoviesData","allMoviesData","console","error","map","movie","title","original_title","id","poster","poster_path","url","axios","get","response","data","results","createSearchMoviesUrl","value","getMovieData","movieID","CalculateWindowHeightHook","useEffect","setDocHeight","document","documentElement","style","setProperty","window","innerHeight","addEventListener","removeEventListener","AppBackground","backgroundIMG","img","initial","opacity","animate","delay","exit","transition","duration","src","BgGreen2","StartPageCard","cardData","onClick","cardTransitionDuration","imgTransition","imgHeight","imgWidth","exitBeforeEnter","div","ease","width","height","opacityTransition","no_image","alt","StartPageCards","searchbarText","suggestions","pushToHistory","setSuggestions","selectedMovieInCardsPage","setTimeout","current","_ps","element","scrollTop","p","slice","item","Searchbar","setSearchbarText","setOldSearchbarText","oldSearchbarText","onSearchbarTextChanging","onKeyPress","onSubmit","preventDefault","debounceTimeout","onChange","type","placeholder","closeImg","StartPageSearch","StartPage","MovieSearchbarContext","GotoOtherRoutesHooks","fetchPopularMoviesOnStartPage","setAllMoviesData","setShowQuickSearchRes","selectedMovieInQuickSearch","gotoStarPage","NoResult","fadeInConditionsArr","onClose","closeBtn","useState","fadeIn","setFadeIn","every","HighlightTextInQuickSearchHooks","indexOfHighlightedMovie","setIndexOfHighlightedMovie","highligthText","text","highlight","index","parts","split","RegExp","part","i","toLowerCase","color","fontWeight","highlightMovieTextOnHover","parseInt","target","getAttribute","PosterLi","li","onMouseEnter","MovieSearchbarPCResults","showQuickSearchRes","cloneSuggestions","MovieSearchbarPC","showNoResults","length","MovieSearchbarMobileResults","MovieSearchbarMobile","MovieSearchbar","enterKeyInSearchbar","ArrowKeysReact","config","up","isNaN","prevState","down","keyCode","which","KeysPressedInSearchbarHooks","showResInSearchBar","node","useRef","hideOnOutsideClick","contains","OnSearchBarClicked","ShowHideQuickSearchHook","TMDBLogo","isMobile","nestedDataToString","nestedData","nestedArray","forEach","push","name","join","MovieInfo","movieData","overview","tagline","production_companies","genres","release_date","runtime","revenue","vote_average","productionList","genresList","toLocaleString","MoviePage","setShowNoResults","timer","clearTimeout","setCloneSuggestions","slicedSuggestions","Provider","App","useLocation","history","useHistory","setBackgroundIMG","initMovieID","setInitMovieID","setMovieID","setMovieData","setDispPostersNum","dataToDisplay","log","backdrop_path","events","tabIndex","replace","exact","path","render","Boolean","hostname","match","ReactDOM","basename","process","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.559343ff.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nexport const AppContext = createContext(null)","import { useContext} from 'react'\r\nimport ScrollBar from 'react-perfect-scrollbar'\r\n// import { isMobile } from \"react-device-detect\"\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport './ScroolbarStyle.scss'\r\n\r\nexport default function AppScrollbar (props) {\r\n  // displays perfect scrollbar if not on mobile because I couldn't add refresh gesture on mobile\r\n  // https://github.com/goldenyz/react-perfect-scrollbar/issues/101\r\n\r\n  const { infiniteScroll, scrollBarRef, dispPostersNum } = useContext(AppContext)\r\n  return (\r\n    // isMobile ? (\r\n    //   <div className=\"overflow-y-auto\">\r\n    //     {props.children}\r\n    //   </div>\r\n    // ) : (\r\n      <ScrollBar \r\n        className='AppScroolbar' \r\n        // adds and clears on scroll event\r\n        onScrollDown={ dispPostersNum < 20 ? (e) => infiniteScroll(e) : undefined}  \r\n        // onYReachEnd={e => infiniteScroll(e)}\r\n        ref = { scrollBarRef }\r\n      >\r\n        {props.children}\r\n      </ScrollBar>\r\n  // )\r\n  )\r\n}","export const API_KEY = 'api_key=cfe422613b250f702980a3bbf9e90716'\r\nexport const BASE_API_URL = 'https://api.themoviedb.org'\r\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/'\r\nexport const BASE_BG_IMG_URL = 'https://image.tmdb.org/t/p/original'\r\n// export const INIT_BG_IMG = 'https://image.tmdb.org/t/p/original/rAiYTfKGqDCRIIqo664sY9XZIvQ.jpg' // interstellar\r\n\r\nexport const POSTER_W500 = `${BASE_IMG_URL}w500`\r\n// export const NOT_FOUND_POSTER_W500 = `${POSTER_W500}null`\r\n// export const NOT_FOUND_BG_IMG = `${BASE_IMG_URL}originalnull` \r\n\r\n\r\nexport const POPULAR_MOVIES_URL = `${BASE_API_URL}/3/movie/popular?${API_KEY}` \r\n\r\n\r\nexport const NUM_OF_DISP_RES_PC = 5\r\nexport const NUM_OF_DISP_RES_MOBILE = 3\r\nexport const PAGE_TRANSITION_TIME = 0.7\r\nexport const START_PAGE_CARDS_TRANSITION = 0.35\r\nexport const QUICK_SEARCH_TRANSITION = 0.35","export const getCurrentPageUrl = location => (\r\n  location.pathname.substring(0, location.pathname.lastIndexOf(\"/\") + 1)\r\n)\r\n\r\nexport const getMovieIdFromLocationPathname = location => (\r\n  location.pathname.substring(location.pathname.lastIndexOf(\"/\") + 1)\r\n)","import axios from 'axios'\r\nimport { API_KEY, BASE_API_URL, POSTER_W500 } from './Consts'\r\nimport { getMovieIdFromLocationPathname } from './RoutesFunctions'\r\n\r\n\r\n//==== Fetch all movies ====\r\nexport async function getMoviesDataToDisplayInSearch(input){\r\n  let allMoviesData\r\n  if (typeof input === 'string'){  // if url\r\n    allMoviesData = await getAllMoviesData(input)\r\n  } else if (typeof input === 'object'){\r\n    allMoviesData = input\r\n  } else {\r\n    console.error(`Passed ${typeof input} input to getMoviesDataToDisplayInSearch. You must pass string or object`)\r\n    return \r\n  }\r\n\r\n  return allMoviesData.map(movie => ({\r\n    title: movie.original_title,\r\n    id: movie.id,\r\n    poster: movie.poster_path !== null ? POSTER_W500 + movie.poster_path : null\r\n  }))\r\n}\r\n\r\nexport async function getAllMoviesData(url){\r\n  const response = await axios.get(url)\r\n  return response.data.results\r\n}\r\n\r\nexport function createSearchMoviesUrl(value){\r\n  return `${BASE_API_URL}/3/search/movie?query=%${value}&${API_KEY}`\r\n}\r\n\r\n//==== Fetch one movie ====\r\nexport async function getMovieData(movieID){\r\n  const response = await axios.get(`${BASE_API_URL}/3/movie/${movieID}?&${API_KEY}`)\r\n  return response.data\r\n}\r\n\r\nexport function setInitMovieID(location){\r\n  const initMovieID = getMovieIdFromLocationPathname(location)\r\n  if(initMovieID === '') return '157336' // interstellar\r\n  return initMovieID\r\n}","import { useEffect } from 'react'\r\n\r\nexport default function CalculateWindowHeightHook() {\r\n// calucluleta size of 1% of window height and saves it to variable\r\n// Proposal for new units to fix this \r\n// https://github.com/w3c/csswg-drafts/issues/4329\r\n// Solution from Jonas Sandstedt comment \r\n// https://chanind.github.io/javascript/2019/09/28/avoid-100vh-on-mobile-web.html\r\n\r\n  useEffect(() => {\r\n    function setDocHeight() {\r\n      document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`)\r\n    }\r\n    window.addEventListener('resize', setDocHeight())\r\n    window.addEventListener('orientationchange', setDocHeight())\r\n\r\n    return () => {\r\n      // functions to be called when unmounted. not shure if it does anything here\r\n      document.removeEventListener('resize', setDocHeight)\r\n      document.removeEventListener('orientationchange', setDocHeight)\r\n    }\r\n  }, [])\r\n  \r\n  return (\r\n    <></>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/BgGreen2.a17d9a1b.jpg\";","import { motion, AnimatePresence } from \"framer-motion\"\r\nimport 'styles/main.scss'\r\nimport BgGreen2 from 'images/BgGreen2.jpg'\r\n\r\n\r\nexport default function AppBackground(props) {\r\n  const { backgroundIMG } = props\r\n  return (\r\n    <>\r\n      <div className='BgGradient'/>\r\n      <AnimatePresence>\r\n        <motion.img \r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1, delay :0.2 }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{duration: 1.5}}\r\n          \r\n          className='BgImage'\r\n          src={backgroundIMG ? backgroundIMG : BgGreen2}\r\n          key={backgroundIMG}\r\n        />\r\n      </AnimatePresence>\r\n    </>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/no_image.2f8a70e1.png\";","import { motion, AnimatePresence } from \"framer-motion\"\r\nimport ImageFadeIn from \"react-image-fade-in\";\r\nimport no_image from 'images/no_image.png'\r\n\r\n\r\nexport default function StartPageCard ({\r\n  cardData, onClick, className, cardTransitionDuration, imgTransition, imgHeight, imgWidth}) {\r\n \r\n  return (\r\n  <AnimatePresence exitBeforeEnter>\r\n    <motion.div\r\n      className={className}\r\n      onClick={() => onClick(cardData.id)}\r\n\r\n      key={cardData.id}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: cardTransitionDuration, ease: 'easeInOut' }}\r\n    >\r\n      <div >\r\n          <ImageFadeIn\r\n            width={imgWidth}\r\n            height={imgHeight}\r\n            opacityTransition={imgTransition}\r\n            src={cardData.poster ? cardData.poster : no_image}\r\n            alt={`poster ${cardData.id}`}\r\n          />\r\n        <p>{cardData.title}</p>\r\n      </div>\r\n    </motion.div>\r\n  </AnimatePresence>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { PAGE_TRANSITION_TIME, START_PAGE_CARDS_TRANSITION } from 'utilities/Consts'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport PosterCard from 'ReusableComponents/PosterCard'\r\n\r\n\r\nexport default function StartPageCards() {\r\n  const {searchbarText, suggestions, dispPostersNum,pushToHistory, scrollBarRef, setSuggestions} = useContext(AppContext)\r\n\r\n  function selectedMovieInCardsPage(id){\r\n    pushToHistory(`/movie/${id}`)\r\n    setTimeout(() => {\r\n      // moves ScrollBar to top\r\n      scrollBarRef.current._ps.element.scrollTop = 0  \r\n      // console.log(\" scrollBarRef\", scrollBarRef.current._ps)\r\n      \r\n      setSuggestions([])\r\n    }, PAGE_TRANSITION_TIME * 1000) // exit animation length\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='StartPageCards'>\r\n      <div className='Container'>\r\n      <AnimatePresence exitBeforeEnter>\r\n        <motion.p\r\n          key={searchbarText}\r\n          className='title'\r\n          \r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1}}\r\n          exit={{ opacity: 0 }}\r\n          transition={{ duration: START_PAGE_CARDS_TRANSITION, ease: \"easeInOut\"}}>\r\n            {!searchbarText && 'Trending Now'}\r\n        </motion.p>\r\n      </AnimatePresence>\r\n\r\n\r\n      <div className='row'>\r\n        {suggestions.slice(0, dispPostersNum).map(item => \r\n          <PosterCard \r\n            className='smallCard col-xl-2 col-md-3 col-4'\r\n            cardData={item} \r\n            onClick={selectedMovieInCardsPage}\r\n            cardTransitionDuration={START_PAGE_CARDS_TRANSITION}\r\n            imgTransition={0.5}\r\n            imgHeight={'750'}\r\n            imgWidth={'500'}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/close.17a94979.svg\";","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport closeImg  from 'images/close.svg'\r\nimport {DebounceInput} from 'react-debounce-input';\r\n\r\nexport default function Searchbar(props) {\r\n  const {searchbarText, setSearchbarText, setOldSearchbarText,  oldSearchbarText, onSearchbarTextChanging} = useContext(AppContext)\r\n\r\n  const {onClick, onKeyPress} = props\r\n\r\n  function resetSearch() {\r\n    setSearchbarText('')\r\n    setOldSearchbarText('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => e.preventDefault()}>\r\n      <DebounceInput\r\n        debounceTimeout={250}\r\n        onChange={onSearchbarTextChanging}\r\n        type='text'\r\n        placeholder='Search Movie'\r\n        value={searchbarText !== '' ? searchbarText : oldSearchbarText}\r\n        onKeyPress={onKeyPress}\r\n        onClick={onClick}\r\n      />\r\n      <img \r\n        src={closeImg} \r\n        onClick={resetSearch}\r\n        alt=\"close search\"\r\n      />\r\n    </form>\r\n  )\r\n}","import 'styles/main.scss'\r\nimport Searchbar from 'ReusableComponents/Searchbar/Searchbar'\r\n\r\nexport default function StartPageSearch() {\r\n  return (\r\n    <div className='col-lg-6 col-md-8 col-sm-9 col-12 startPageSearchbar'>\r\n      <Searchbar/>\r\n    </div>\r\n  )\r\n}","import StartPageCard from './StartPageCards'\r\nimport StartPageSearch from './StartPageSearchbar'\r\nimport { PAGE_TRANSITION_TIME } from 'utilities/Consts'\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport default function StartPage() {\r\n  return (\r\n    <motion.div \r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1, delay :0.2 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: PAGE_TRANSITION_TIME }}\r\n    > \r\n      <StartPageSearch />\r\n      <StartPageCard />\r\n    </motion.div> \r\n  )\r\n}","import {createContext} from 'react'\r\n\r\nexport const MovieSearchbarContext = createContext(null)","import { useContext } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\n\r\n\r\nexport default function GotoOtherRoutesHooks() {\r\n  const { searchbarText, setSearchbarText, oldSearchbarText, pushToHistory, fetchPopularMoviesOnStartPage, setAllMoviesData} = useContext(AppContext)\r\n  const { setShowQuickSearchRes } = useContext(MovieSearchbarContext)\r\n\r\n  function selectedMovieInQuickSearch(id){\r\n    if (searchbarText && id !== undefined) {\r\n      pushToHistory(`/movie/${id}`)\r\n      setSearchbarText(oldSearchbarText)\r\n      setShowQuickSearchRes(false)\r\n    }\r\n  }\r\n\r\n  const gotoStarPage = () => {\r\n    setAllMoviesData([])\r\n    fetchPopularMoviesOnStartPage()\r\n    pushToHistory(`/`)\r\n  }\r\n\r\n  return {selectedMovieInQuickSearch, gotoStarPage}\r\n}","import {useState, useEffect} from 'react'\r\nimport closeImg  from 'images/close.svg'\r\n\r\nexport default function NoResult({className, fadeInConditionsArr, onClose, closeBtn}) {\r\n  const [fadeIn, setFadeIn] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // if every element in array is true\r\n    setFadeIn(fadeInConditionsArr.every(item => item))\r\n  }, [fadeInConditionsArr])\r\n\r\n  return (\r\n    <div className={`noResult ${className} ` + (fadeIn && 'fadeIn')}>\r\n        <p>no result</p>\r\n\r\n        {closeBtn === 'btn' &&\r\n          <p \r\n            className='btn'\r\n            onClick={() => onClose(false)}\r\n          >close</p>\r\n        }\r\n\r\n        {closeBtn === 'img' &&\r\n          <img \r\n            className='closeImg'\r\n            src={closeImg} \r\n            onClick={() => onClose(false)}\r\n            alt=\"close search results\"\r\n          />\r\n        }\r\n    </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\n\r\n\r\nexport default function HighlightTextInQuickSearchHooks() {\r\n  const { indexOfHighlightedMovie, setIndexOfHighlightedMovie } = useContext(MovieSearchbarContext)\r\n\r\n  function highligthText(text, highlight, index) {\r\n    const parts = text.split(new RegExp(`(${highlight})`, 'gi'))\r\n\r\n    return <span> { parts.map((part, i) => \r\n      <span \r\n        key={i} \r\n        style=\r\n        {(part.toLowerCase() === highlight.toLowerCase() && indexOfHighlightedMovie !== index)\r\n          ? { color: '#00FC87', fontWeight: 'bold' } \r\n          : part.toLowerCase() === highlight.toLowerCase() \r\n            ? { fontWeight: 'bold'}\r\n            : {}} \r\n      >\r\n        { part }\r\n      </span>)\r\n    } </span>;\r\n  }\r\n\r\n  const highlightMovieTextOnHover = e => {\r\n    setIndexOfHighlightedMovie(parseInt(e.target.getAttribute('index')))\r\n  }\r\n\r\n  return {highligthText, highlightMovieTextOnHover}\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { QUICK_SEARCH_TRANSITION } from 'utilities/Consts'\r\nimport HighlightTextInQuickSearchHooks from '../AppFiles/Movie/MovieSearchbar/Hooks/HighlightTextInQuickSearchHooks'\r\nimport GotoOtherRoutesHooks from '../AppFiles/Movie/MovieSearchbar/Hooks/GotoOtherRoutesHooks'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport ImageFadeIn from \"react-image-fade-in\"\r\nimport no_image from 'images/no_image.png'\r\n\r\nexport default function PosterLi({item, index}) {\r\n  const { indexOfHighlightedMovie } = useContext(MovieSearchbarContext)\r\n  const { searchbarText } = useContext(AppContext)\r\n\r\n  const {highligthText, highlightMovieTextOnHover} = HighlightTextInQuickSearchHooks()\r\n  const {selectedMovieInQuickSearch} = GotoOtherRoutesHooks()\r\n\r\n\r\n\r\n  return (\r\n    <AnimatePresence exitBeforeEnter>\r\n          <motion.li \r\n            className={'searchbar_li ' + \r\n            (indexOfHighlightedMovie === index && 'active')}\r\n\r\n            onClick={() => selectedMovieInQuickSearch(item.id)}\r\n            onMouseEnter={highlightMovieTextOnHover} \r\n            index={index}\r\n            key={item.id}\r\n\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            transition={{ duration: QUICK_SEARCH_TRANSITION }}\r\n          >\r\n            <div className='row'>\r\n              <ImageFadeIn \r\n                className='col-lg-2 col-md-3 col-sm-4 col-3'\r\n                width='500'\r\n                height='750'\r\n                opacityTransition={0.5}\r\n                src={item.poster ? item.poster : no_image} \r\n                alt={`poster ${item.id}`}\r\n              />\r\n              <p className='col-lg-10 col-md-9 col-sm-8 col-9'>\r\n                {highligthText(item.title, searchbarText, index)}\r\n              </p>\r\n            </div>\r\n          </motion.li>\r\n          </AnimatePresence>\r\n  )\r\n}\r\n","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { NUM_OF_DISP_RES_PC } from 'utilities/Consts'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport HighlightTextInQuickSearchHooks from '../Hooks/HighlightTextInQuickSearchHooks'\r\nimport PosterLi from 'ReusableComponents/PosterLi'\r\n\r\nexport default function MovieSearchbarPCResults() {\r\n  const { showQuickSearchRes, indexOfHighlightedMovie, cloneSuggestions } = useContext(MovieSearchbarContext)\r\n  const { searchbarText, pushToHistory } = useContext(AppContext)\r\n  const {highlightMovieTextOnHover} = HighlightTextInQuickSearchHooks()\r\n\r\n  return (\r\n    <ul \r\n      className={'searchbar_ul ' + \r\n      (showQuickSearchRes && searchbarText && 'fadeIn')} \r\n    >\r\n      {cloneSuggestions.map((item, index) => \r\n        <PosterLi item={item} index={index} />\r\n      )}\r\n\r\n      {<li className={'searchbar_li showMore ' + \r\n        (indexOfHighlightedMovie === NUM_OF_DISP_RES_PC && 'active')}\r\n\r\n        onMouseEnter={highlightMovieTextOnHover} \r\n        onClick={() => pushToHistory(`/`)} \r\n        index={NUM_OF_DISP_RES_PC}\r\n      >\r\n        <p>show more</p>\r\n      </li>}\r\n    </ul>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { QUICK_SEARCH_TRANSITION } from 'utilities/Consts'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport NoResult from 'ReusableComponents/NoResult/NoResult'\r\nimport MovieSearchbarPCResults from './MovieSearchbarPCResults'\r\n\r\n\r\nexport default function MovieSearchbarPC() {\r\n  const { showNoResults, showQuickSearchRes, setShowQuickSearchRes} = useContext(MovieSearchbarContext)\r\n  const { searchbarText, suggestions } = useContext(AppContext)\r\n \r\n\r\n  return (\r\n  <div className='searchBarResPC'>\r\n    <AnimatePresence exitBeforeEnter>\r\n    <motion.div\r\n      key={suggestions.length + showQuickSearchRes}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: QUICK_SEARCH_TRANSITION, ease: 'easeInOut' }}\r\n    >\r\n    {suggestions.length > 0 && showQuickSearchRes\r\n      ? <MovieSearchbarPCResults/>\r\n      : <NoResult \r\n          className='searchbar_ul'\r\n          fadeInConditionsArr={[showQuickSearchRes, searchbarText, showNoResults]}\r\n          onClose={setShowQuickSearchRes}\r\n          closeBtn={'img'}\r\n        />\r\n      }\r\n    </motion.div>\r\n    </AnimatePresence>\r\n  </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { NUM_OF_DISP_RES_MOBILE, QUICK_SEARCH_TRANSITION } from 'utilities/Consts'\r\nimport GotoOtherRoutesHooks from '../Hooks/GotoOtherRoutesHooks'\r\nimport PosterCard from 'ReusableComponents/PosterCard'\r\n\r\n\r\nexport default function MovieSearchbarMobileResults() {\r\n  const { showQuickSearchRes, setShowQuickSearchRes,  cloneSuggestions} = useContext(MovieSearchbarContext)\r\n  const { searchbarText, pushToHistory } = useContext(AppContext)\r\n  const {selectedMovieInQuickSearch} = GotoOtherRoutesHooks()\r\n\r\n  return (\r\n    <div\r\n      className={'searchbar_container ' + \r\n      (showQuickSearchRes && searchbarText && 'fadeIn')} \r\n    >\r\n      <div className='searchbar_div'>\r\n        {cloneSuggestions.map(item => \r\n          <PosterCard \r\n            className='smallCard col-4'\r\n            cardData={item} \r\n            onClick={selectedMovieInQuickSearch}\r\n            cardTransitionDuration={QUICK_SEARCH_TRANSITION}\r\n            imgTransition={0.5}\r\n            imgHeight={'750'}\r\n            imgWidth={'500'}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div className='searchbar_li'>\r\n        <p \r\n          className='showMoreBtn'\r\n          onClick={() => pushToHistory(`/`)} \r\n          index={NUM_OF_DISP_RES_MOBILE}\r\n        >\r\n          show more\r\n        </p>\r\n        <p \r\n          className='showMoreClose'\r\n          onClick={() => setShowQuickSearchRes(false)}\r\n        >\r\n          close\r\n        </p>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { QUICK_SEARCH_TRANSITION } from 'utilities/Consts'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport NoResult from 'ReusableComponents/NoResult/NoResult'\r\nimport ResultsMobile from './MovieSearchbarMobileResults'\r\n\r\n\r\nexport default function MovieSearchbarMobile() {\r\n  const { showNoResults, showQuickSearchRes, setShowQuickSearchRes} = useContext(MovieSearchbarContext)\r\n  const { searchbarText, suggestions } = useContext(AppContext)\r\n\r\n  \r\n  return (\r\n  <div className='searchBarResMobile'>\r\n    <AnimatePresence exitBeforeEnter>\r\n      <motion.div\r\n        key={suggestions.length + showQuickSearchRes}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: QUICK_SEARCH_TRANSITION, ease: 'easeInOut' }}\r\n      >\r\n        {suggestions.length > 0 && showQuickSearchRes\r\n        ? <ResultsMobile/>\r\n        : <NoResult \r\n            className='searchbar_container'\r\n            fadeInConditionsArr={[showQuickSearchRes, searchbarText, showNoResults]}\r\n            onClose={setShowQuickSearchRes}\r\n            closeBtn={'btn'}\r\n          />\r\n        }\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/tmdb.6852b1ef.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport 'styles/main.scss'\r\nimport { isMobile } from \"react-device-detect\"\r\nimport KeysPressedInSearchbarHooks from './Hooks/KeysPressedInSearchbarHooks'\r\nimport ShowHideQuickSearchHook from './Hooks/ShowHideQuickSearchHook'\r\nimport GotoOtherRoutesHooks from './Hooks/GotoOtherRoutesHooks'\r\nimport MovieSearchbarPC from './Results/MovieSearchbarPC'\r\nimport MovieSearchbarMobile from './Results/MovieSearchbarMobile'\r\nimport TMDBLogo from 'images/tmdb.svg'\r\nimport Searchbar from 'ReusableComponents/Searchbar/Searchbar'\r\n\r\n\r\nexport default function MovieSearchbar() {\r\n  const enterKeyInSearchbar = KeysPressedInSearchbarHooks()\r\n  const {node, OnSearchBarClicked} = ShowHideQuickSearchHook()\r\n  const {gotoStarPage} = GotoOtherRoutesHooks()\r\n\r\n  return (\r\n    <div className='movieSearchBar'>\r\n      <div className='row Container'>\r\n        <div className='col-xs-12 col-sm-3 col-lg-3 p-0'>\r\n          <img \r\n            src={TMDBLogo} \r\n            className='logo'\r\n            alt='The Movie Database Logo' \r\n            onClick={gotoStarPage}\r\n          />\r\n        </div>\r\n        \r\n        <div className='col-xs-12 col-sm-9 col-lg-9 p-0' ref={node}>\r\n          <Searchbar \r\n            onClick={OnSearchBarClicked} \r\n            onKeyPress={enterKeyInSearchbar}\r\n          />\r\n          {isMobile \r\n          ? <MovieSearchbarMobile/> \r\n          : <MovieSearchbarPC/>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport ArrowKeysReact from 'arrow-keys-react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { NUM_OF_DISP_RES_PC } from 'utilities/Consts'\r\nimport GotoOtherRoutesHooks from './GotoOtherRoutesHooks'\r\n\r\nexport default function KeysPressedInSearchbarHooks() {\r\n  const { suggestions, pushToHistory} = useContext(AppContext)\r\n  const { showQuickSearchRes, setShowQuickSearchRes, indexOfHighlightedMovie, setIndexOfHighlightedMovie } = useContext(MovieSearchbarContext)\r\n\r\n  const {selectedMovieInQuickSearch} = GotoOtherRoutesHooks()\r\n  \r\n  \r\n  function enterKeyInSearchbar(e){\r\n    const code = e.keyCode || e.which\r\n    if (code === 13 /* enter key */) {\r\n      if (!showQuickSearchRes) setShowQuickSearchRes(true)\r\n      if (showQuickSearchRes) {\r\n        if (indexOfHighlightedMovie === NUM_OF_DISP_RES_PC) {\r\n          pushToHistory(`/`)\r\n        } else {\r\n          selectedMovieInQuickSearch(suggestions[indexOfHighlightedMovie].id)\r\n        }\r\n      } \r\n    }\r\n  }\r\n\r\n  // Up and down arrow keys configuration\r\n  // allows using up and down key to select movie in quick search\r\n  ArrowKeysReact.config({\r\n    up: () => {\r\n      isNaN(indexOfHighlightedMovie)\r\n        ? setIndexOfHighlightedMovie(NUM_OF_DISP_RES_PC)\r\n        : indexOfHighlightedMovie < 0\r\n          ? setIndexOfHighlightedMovie(NUM_OF_DISP_RES_PC)\r\n          : setIndexOfHighlightedMovie(prevState => prevState - 1)\r\n    },\r\n    down: () => {\r\n      isNaN(indexOfHighlightedMovie)\r\n        ? setIndexOfHighlightedMovie(0)\r\n        : indexOfHighlightedMovie > NUM_OF_DISP_RES_PC\r\n          ? setIndexOfHighlightedMovie(0)\r\n          : setIndexOfHighlightedMovie(prevState => prevState + 1)\r\n    }\r\n  })\r\n\r\n\r\n  return enterKeyInSearchbar\r\n}","import { useEffect, useContext, useRef } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\n\r\nexport default function ShowHideQuickSearchHook() {\r\n  const { searchbarText, setSearchbarText, oldSearchbarText, setOldSearchbarText, showResInSearchBar } = useContext(AppContext)\r\n  const { setShowQuickSearchRes } = useContext(MovieSearchbarContext)\r\n  const node = useRef()\r\n\r\n  function hideOnOutsideClick(e) {\r\n    if (!node.current.contains(e.target)){\r\n      setShowQuickSearchRes(false) \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', hideOnOutsideClick)\r\n    return () => {\r\n      // cleanup function - called when unmounted\r\n      document.removeEventListener('mousedown', hideOnOutsideClick)\r\n    }\r\n  }, [])\r\n\r\n  const OnSearchBarClicked = async e => {\r\n    setShowQuickSearchRes(true)\r\n    if (searchbarText === '') {\r\n      showResInSearchBar(oldSearchbarText)\r\n      setSearchbarText(oldSearchbarText)\r\n      setOldSearchbarText('')\r\n    }\r\n  }\r\n\r\n  return {node, OnSearchBarClicked}\r\n}","export function nestedDataToString(nestedData) {\r\n  let nestedArray = []\r\n  if (nestedData !== undefined) {\r\n    nestedData.forEach(item => {\r\n      nestedArray.push(item.name)\r\n    })\r\n  }\r\n  // returns string compiled from array\r\n  return nestedArray.join(', ') \r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { POSTER_W500 } from 'utilities/Consts'\r\nimport { nestedDataToString } from './MovieCardFunctions'\r\nimport { PAGE_TRANSITION_TIME } from 'utilities/Consts'\r\nimport no_image from 'images/no_image.png'\r\n\r\nexport default function MovieInfo () {\r\n  const { movieData } = useContext(AppContext)\r\n  const { original_title, overview, tagline, poster_path, production_companies, genres, release_date, runtime } = movieData\r\n  let { revenue, vote_average } = movieData\r\n\r\n  const productionList = nestedDataToString(production_companies),\r\n        genresList = nestedDataToString(genres)\r\n\r\n\r\n  return (\r\n    <div className='movieCard'>\r\n      <AnimatePresence exitBeforeEnter>\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{ duration: PAGE_TRANSITION_TIME }}\r\n          className='Container row'\r\n          key={original_title}\r\n        >\r\n          <div className='metaDataContainer col-12 col-md-7 col-lg-8'>\r\n            <h1>{original_title}</h1>\r\n            <span className='tagline'>{tagline}</span>\r\n            <p>{overview}</p>\r\n            <div className='additionalDetails'>\r\n              <span className='genreList'>{genresList}</span>\r\n              <span className='productionList'>{productionList}</span>\r\n              <div className='row releaseDetails'>\r\n\r\n                <div className='col-6'>\r\n                  Original Release:\r\n                  <span className='metaData'>{release_date}</span>\r\n                </div>\r\n                <div className='col-6'>\r\n                  Running Time: \r\n                  <span className='metaData'>\r\n                    {runtime} min\r\n                  </span>\r\n                </div>\r\n                <div className='col-6'>\r\n                  Box Office: \r\n                  <span className='metaData'>\r\n                    {revenue ? `${parseInt(revenue).toLocaleString()} $` : '-'}\r\n                  </span>\r\n                </div>\r\n                <div className='col-6'>\r\n                  Vote Average:\r\n                  <span className='metaData'>\r\n                    {vote_average ? vote_average : '-'}\r\n                  </span>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div \r\n          className='posterContainer order-md-first col-12 col-md-5 col-lg-4'>\r\n            <img\r\n              className='poster'\r\n              src={poster_path !== null \r\n                ? POSTER_W500 + poster_path \r\n                : no_image}\r\n              alt='poster'\r\n            />\r\n          </div>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    </div>\r\n  )\r\n}\r\n","import { motion } from \"framer-motion\"\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { PAGE_TRANSITION_TIME } from 'utilities/Consts'\r\nimport MovieSearch from './MovieSearchbar/MovieSearchbar'\r\nimport MovieCard from './MovieCard/MovieCard'\r\n\r\n\r\nimport { isMobile } from \"react-device-detect\"\r\nimport {useContext, useState, useEffect} from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { NUM_OF_DISP_RES_MOBILE, NUM_OF_DISP_RES_PC } from 'utilities/Consts'\r\n\r\nexport default function MoviePage() {\r\n  const [showQuickSearchRes, setShowQuickSearchRes] = useState(false)\r\n  const [indexOfHighlightedMovie, setIndexOfHighlightedMovie] = useState()\r\n  const { searchbarText, suggestions } = useContext(AppContext)\r\n\r\n  // makes no result pop after 1s of no receveing info from API\r\n  const [showNoResults, setShowNoResults] = useState(false)\r\n  useEffect(() => {\r\n    if(searchbarText === ''){\r\n      setShowNoResults(false)\r\n    } else {\r\n      const timer = setTimeout(() => {\r\n        setShowNoResults(true)\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [searchbarText]);\r\n\r\n\r\n  // makes search results no disappear after are deleted of memory.\r\n  // holds them for 800ms that allows to make smooth transition\r\n  const [cloneSuggestions, setCloneSuggestions] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    const slicedSuggestions = suggestions\r\n    .slice(0, isMobile ? NUM_OF_DISP_RES_MOBILE : NUM_OF_DISP_RES_PC)\r\n\r\n    if(suggestions.length > 0){\r\n      setCloneSuggestions(slicedSuggestions)\r\n    } else {\r\n      const timer = setTimeout(() => {\r\n        setCloneSuggestions(slicedSuggestions)\r\n      }, 800);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [suggestions]);\r\n\r\n\r\n  return (\r\n    <MovieSearchbarContext.Provider value={{ showQuickSearchRes, setShowQuickSearchRes, indexOfHighlightedMovie, setIndexOfHighlightedMovie, showNoResults, cloneSuggestions}}>\r\n      <motion.div \r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1, delay :0.2}}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: PAGE_TRANSITION_TIME }}\r\n      >    \r\n        <MovieSearch /> \r\n        <MovieCard />\r\n      </motion.div>\r\n    </MovieSearchbarContext.Provider>\r\n  )\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport 'styles/main.scss'\r\nimport { Route, Switch, useLocation, useHistory } from 'react-router-dom'\r\nimport { AnimatePresence } from \"framer-motion\"\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport AppScroolbar from 'ReusableComponents/Scroolbar/AppScrollbar'\r\nimport { getMoviesDataToDisplayInSearch, getAllMoviesData, getMovieData, createSearchMoviesUrl, setInitMovieID } from 'utilities/FetchFunctions'\r\nimport { POPULAR_MOVIES_URL, BASE_BG_IMG_URL } from 'utilities/Consts'\r\nimport { getCurrentPageUrl, getMovieIdFromLocationPathname } from 'utilities/RoutesFunctions'\r\nimport CalculateWindowHeightHook from 'utilities/CalculateWindowHeightHook'\r\nimport ArrowKeysReact from 'arrow-keys-react'\r\nimport AppBackground from 'AppFiles/AppBackground'\r\nimport StartPage from 'AppFiles/StartPage/StartPage'\r\nimport MoviePage from 'AppFiles/Movie/MoviePage'\r\nimport { isMobile } from \"react-device-detect\"\r\n\r\nexport default function App () {\r\n  const location = useLocation()  // key to app routes\r\n  const history = useHistory()\r\n  const pushToHistory = url => history.push(url)\r\n\r\n\r\n// ==== Fetch StartPage ====\r\n  const [backgroundIMG, setBackgroundIMG] = useState()\r\n  const [suggestions, setSuggestions] = useState([])\r\n  const [searchbarText, setSearchbarText] = useState('')\r\n\r\n  async function fetchPopularMoviesOnStartPage() {\r\n    setSuggestions(await getMoviesDataToDisplayInSearch(POPULAR_MOVIES_URL))\r\n  }\r\n\r\n  // if search is empty on main page it displays popular movies\r\n  // loads at page starup because searchbarText === '' at start\r\n  // checks this condition every time\r\n  useEffect(() => {\r\n    if(searchbarText === '' && location.pathname ==='/') fetchPopularMoviesOnStartPage()\r\n    else if(searchbarText === '') {\r\n      setTimeout(() => {\r\n        setSuggestions([])\r\n      }, 600) // debounc time + animation time\r\n    }\r\n  }, [searchbarText])\r\n// ==== END Fetch StartPage ====\r\n\r\n\r\n// ==== Fetch movie page based on movieID parameter ====\r\n  const [movieID, setMovieID] = useState(() => setInitMovieID(location))\r\n  const [movieData, setMovieData] = useState({})\r\n  \r\n  useEffect(async () => {\r\n    movieID && setMovieData(await getMovieData(movieID))\r\n  }, [movieID])\r\n\r\n  // implements back button in browser\r\n  // allows to go back to previous movie on moviePage\r\n  useEffect(() => {\r\n    setMovieID(getMovieIdFromLocationPathname(location))\r\n  }, [location.pathname])\r\n  \r\n// ==== END Fetch movie page ====\r\n\r\n\r\n\r\n// ==== Search state and functions ====\r\n  const [allMoviesData, setAllMoviesData] = useState([])\r\n  const [oldSearchbarText, setOldSearchbarText] = useState('')\r\n  const [dispPostersNum, setDispPostersNum] = useState(isMobile ? 9 : 12)\r\n\r\n  const onSearchbarTextChanging = e => {\r\n    const value = e.target.value.replace(/[^\\w\\s]/gi, '')\r\n    setSearchbarText(value)\r\n    showResInSearchBar(value)\r\n  }\r\n\r\n  const showResInSearchBar = async (value) => {\r\n    setDispPostersNum(isMobile ? 6 : 12)\r\n    if (value.length === 0) setOldSearchbarText('')\r\n    if (value.length >= 1) {\r\n      const allMoviesData = await getAllMoviesData(createSearchMoviesUrl(value))\r\n      const dataToDisplay = await getMoviesDataToDisplayInSearch(allMoviesData)\r\n\r\n      setAllMoviesData(allMoviesData)\r\n      setSuggestions(dataToDisplay)\r\n      setOldSearchbarText(value)\r\n    }\r\n    \r\n    isMobile && setTimeout(() => {\r\n      setDispPostersNum(9)\r\n    }, 1000) // adds 3 more posters\r\n  }\r\n  \r\n  // ==== END Search state and functions ====\r\n\r\n  \r\n  // == ScrollBar stuff ==\r\n  const infiniteScroll = e => {\r\n    // console.log('infinite Scroll')\r\n    setDispPostersNum(20)\r\n  }\r\n\r\n  const scrollBarRef = useRef(null)\r\n  // == END ScrollBar stuff ==\r\n\r\n\r\n// ==== Console log stuff ====\r\n  useEffect(() => {\r\n    console.log({suggestions})\r\n  }, [suggestions])\r\n\r\n  useEffect(() => {\r\n    console.log({movieData})\r\n    setBackgroundIMG(movieData.backdrop_path && `${BASE_BG_IMG_URL}${movieData.backdrop_path}`)\r\n  }, [movieData])\r\n\r\n  useEffect(() => {\r\n    console.log(`searchbarText: ${searchbarText}`)\r\n  }, [searchbarText])\r\n\r\n  // useEffect(() => {\r\n  //   console.log(`backgroundIMG: ${backgroundIMG}`)\r\n  // }, [backgroundIMG])\r\n\r\n// ==== END Console log stuff ====\r\n\r\n\r\n  return (\r\n    <div>\r\n      <CalculateWindowHeightHook/>\r\n      <AppBackground backgroundIMG={backgroundIMG}/>\r\n\r\n      <div\r\n        id='app'\r\n        {...ArrowKeysReact.events}\r\n        tabIndex='1'\r\n      >\r\n        <AppContext.Provider \r\n          value={{movieID, movieData, searchbarText, setSearchbarText, oldSearchbarText, setOldSearchbarText, suggestions, setSuggestions,  onSearchbarTextChanging, allMoviesData, setAllMoviesData, setMovieID, fetchPopularMoviesOnStartPage, showResInSearchBar, history, pushToHistory, dispPostersNum, setDispPostersNum, infiniteScroll, scrollBarRef}}\r\n        >\r\n          <AppScroolbar>\r\n            <AnimatePresence exitBeforeEnter>\r\n              <Switch \r\n                location={location} \r\n                key={getCurrentPageUrl(location)}\r\n              >\r\n                <Route exact path='/' render={() => <StartPage/>} />\r\n                <Route exact path={`/movie/:${movieID}`} render={() => <MoviePage/>} />\r\n              </Switch>\r\n            </AnimatePresence>\r\n          </AppScroolbar>\r\n        </AppContext.Provider>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport App from 'App'\r\nimport * as serviceWorker from 'testingFiles/serviceWorker'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}