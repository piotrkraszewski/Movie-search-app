{"version":3,"sources":["AppFiles/Contexts/AppContext.js","ReusableComponents/Scroolbar/AppScrollbar.js","Utils/Consts.js","Utils/RoutesFunctions.js","Utils/FetchFunctions.js","ReusableComponents/AppBackground/AppBackground.js","images/no_image.png","ReusableComponents/PosterCard.js","AppFiles/StartPage/StartPageCards.js","images/close.svg","ReusableComponents/Searchbar/Searchbar.js","AppFiles/StartPage/StartPageSearchbar.js","AppFiles/StartPage/StartPage.js","AppFiles/Contexts/MovieSearchbarContext.js","Hooks/SearchbarHooks/useGotoOtherRoutes.js","ReusableComponents/NoResult/NoResult.js","Hooks/SearchbarHooks/useHighlightTextInQuickSearch.js","Hooks/SearchbarHooks/useCreateArrayToDisplayAndFadeout.js","ReusableComponents/PosterLi.js","AppFiles/Movie/MovieSearchbar/Results/MovieSearchbarPCResults.js","ReusableComponents/SearchbarResultsTransitionWraper.js","Hooks/SearchbarHooks/useDelayShowNoResults.js","AppFiles/Movie/MovieSearchbar/Results/MovieSearchbarPC.js","AppFiles/Movie/MovieSearchbar/Results/MovieSearchbarMobileResults.js","AppFiles/Movie/MovieSearchbar/Results/MovieSearchbarMobile.js","images/tmdb.svg","AppFiles/Movie/MovieSearchbar/MovieSearchbar.js","Hooks/SearchbarHooks/useKeysPressedInSearchbar.js","Hooks/SearchbarHooks/useShowHideQuickSearch.js","AppFiles/Movie/MovieCard/MovieCardFunctions.js","AppFiles/Movie/MovieCard/MovieCard.js","AppFiles/Movie/MoviePage.js","images/BgGreen.jpg","App.js","testingFiles/serviceWorker.js","index.js"],"names":["AppContext","createContext","AppScrollbar","props","useContext","infiniteScroll","scrollBarRef","dispPostersNum","className","onScrollDown","e","undefined","ref","children","API_KEY","BASE_API_URL","POSTER_W500","POPULAR_MOVIES_URL","PAGE_TRANSITION_TIME","QUICK_SEARCH_TRANSITION","getCurrentPageUrl","location","pathname","substring","lastIndexOf","getMovieIdFromLocationPathname","getMoviesDataToDisplayInSearch","input","a","getAllMoviesData","allMoviesData","console","error","map","movie","title","original_title","id","poster","poster_path","url","axios","get","response","data","results","createSearchMoviesUrl","value","getMovieData","movieID","AppBackground","fetchImg","fallbackImg","useState","window","innerWidth","width","setWidth","innerHeight","height","setHeight","useEffect","listener","addEventListener","removeEventListener","img","src","initial","opacity","animate","delay","exit","transition","duration","StartPageCard","cardData","onClick","cardTransitionDuration","imgTransition","imgHeight","imgWidth","exitBeforeEnter","div","ease","opacityTransition","no_image","alt","StartPageCards","searchbarText","suggestions","pushToHistory","setSuggestions","selectedMovieInCardsPage","setTimeout","current","_ps","element","scrollTop","p","slice","item","Searchbar","setSearchbarText","setOldSearchbarText","oldSearchbarText","onSearchbarTextChanging","onKeyPress","onSubmit","preventDefault","debounceTimeout","onChange","type","placeholder","closeImg","StartPageSearch","StartPage","MovieSearchbarContext","GotoOtherRoutesHooks","fetchPopularMoviesOnStartPage","setAllMoviesData","setShowQuickSearchRes","selectedMovieInQuickSearch","gotoStarPage","NoResult","fadeInConditionsArr","onClose","closeBtn","fadeIn","setFadeIn","every","HighlightTextInQuickSearchHooks","indexOfHighlightedMovie","setIndexOfHighlightedMovie","highligthText","text","highlight","index","parts","split","RegExp","part","i","style","toLowerCase","color","fontWeight","highlightMovieTextOnHover","parseInt","target","getAttribute","useCreateArrayToDisplayAndFadeout","array","sliceNum","length","disappearDelay","clonedArray","setClonedArray","slicedArray","timer","clearTimeout","PosterLi","li","onMouseEnter","MovieSearchbarPCResults","showQuickSearchRes","displayedSuggestions","SearchbarResultsTransitionWraper","render","useDelayShowNoResults","msDelay","stringDependency","showNoResults","setShowNoResults","MovieSearchbarPC","MovieSearchbarMobileResults","MovieSearchbarMobile","MovieSearchbar","enterKeyInSearchbar","ArrowKeysReact","config","up","isNaN","prevState","down","keyCode","which","KeysPressedInSearchbarHooks","showResInSearchBar","node","useRef","hideOnOutsideClick","contains","document","OnSearchBarClicked","ShowHideQuickSearchHook","TMDBLogo","isMobile","nestedDataToString","nestedData","nestedArray","forEach","push","name","join","MovieInfo","movieData","overview","tagline","production_companies","genres","release_date","runtime","revenue","vote_average","productionList","genresList","toLocaleString","MoviePage","Provider","App","useLocation","history","useHistory","backgroundIMG","setBackgroundIMG","initMovieID","setInitMovieID","setMovieID","setMovieData","setDispPostersNum","dataToDisplay","log","backdrop_path","BgGreen","events","tabIndex","replace","exact","path","Boolean","hostname","match","ReactDOM","basename","process","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.da2429f5.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nexport const AppContext = createContext(null)","import { useContext} from 'react'\r\nimport ScrollBar from 'react-perfect-scrollbar'\r\n// import { isMobile } from \"react-device-detect\"\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport './ScroolbarStyle.scss'\r\n\r\nexport default function AppScrollbar (props) {\r\n  // displays perfect scrollbar if not on mobile because I couldn't add refresh gesture on mobile\r\n  // https://github.com/goldenyz/react-perfect-scrollbar/issues/101\r\n\r\n  const { infiniteScroll, scrollBarRef, dispPostersNum } = useContext(AppContext)\r\n  return (\r\n    // isMobile ? (\r\n    //   <div className=\"overflow-y-auto\">\r\n    //     {props.children}\r\n    //   </div>\r\n    // ) : (\r\n      <ScrollBar \r\n        className='AppScroolbar' \r\n        // adds and clears on scroll event\r\n        onScrollDown={ dispPostersNum < 20 ? (e) => infiniteScroll(e) : undefined}  \r\n        // onYReachEnd={e => infiniteScroll(e)}\r\n        ref = { scrollBarRef }\r\n      >\r\n        {props.children}\r\n      </ScrollBar>\r\n  // )\r\n  )\r\n}","export const API_KEY = 'api_key=cfe422613b250f702980a3bbf9e90716'\r\nexport const BASE_API_URL = 'https://api.themoviedb.org'\r\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/'\r\nexport const BASE_BG_IMG_URL = 'https://image.tmdb.org/t/p/original'\r\n// export const INIT_BG_IMG = 'https://image.tmdb.org/t/p/original/rAiYTfKGqDCRIIqo664sY9XZIvQ.jpg' // interstellar\r\n\r\nexport const POSTER_W500 = `${BASE_IMG_URL}w500`\r\n// export const NOT_FOUND_POSTER_W500 = `${POSTER_W500}null`\r\n// export const NOT_FOUND_BG_IMG = `${BASE_IMG_URL}originalnull` \r\n\r\n\r\nexport const POPULAR_MOVIES_URL = `${BASE_API_URL}/3/movie/popular?${API_KEY}` \r\n\r\n\r\nexport const NUM_OF_DISP_RES_PC = 5\r\nexport const NUM_OF_DISP_RES_MOBILE = 3\r\nexport const PAGE_TRANSITION_TIME = 0.7\r\nexport const START_PAGE_CARDS_TRANSITION = 0.35\r\nexport const QUICK_SEARCH_TRANSITION = 0.35","export const getCurrentPageUrl = location => (\r\n  location.pathname.substring(0, location.pathname.lastIndexOf(\"/\") + 1)\r\n)\r\n\r\nexport const getMovieIdFromLocationPathname = location => (\r\n  location.pathname.substring(location.pathname.lastIndexOf(\"/\") + 1)\r\n)","import axios from 'axios'\r\nimport { API_KEY, BASE_API_URL, POSTER_W500 } from './Consts'\r\nimport { getMovieIdFromLocationPathname } from './RoutesFunctions'\r\n\r\n\r\n//==== Fetch all movies ====\r\nexport async function getMoviesDataToDisplayInSearch(input){\r\n  let allMoviesData\r\n  if (typeof input === 'string'){  // if url\r\n    allMoviesData = await getAllMoviesData(input)\r\n  } else if (typeof input === 'object'){\r\n    allMoviesData = input\r\n  } else {\r\n    console.error(`Passed ${typeof input} input to getMoviesDataToDisplayInSearch. You must pass string or object`)\r\n    return \r\n  }\r\n\r\n  return allMoviesData.map(movie => ({\r\n    title: movie.original_title,\r\n    id: movie.id,\r\n    poster: movie.poster_path !== null ? POSTER_W500 + movie.poster_path : null\r\n  }))\r\n}\r\n\r\nexport async function getAllMoviesData(url){\r\n  const response = await axios.get(url)\r\n  return response.data.results\r\n}\r\n\r\nexport function createSearchMoviesUrl(value){\r\n  return `${BASE_API_URL}/3/search/movie?query=%${value}&${API_KEY}`\r\n}\r\n\r\n//==== Fetch one movie ====\r\nexport async function getMovieData(movieID){\r\n  const response = await axios.get(`${BASE_API_URL}/3/movie/${movieID}?&${API_KEY}`)\r\n  return response.data\r\n}\r\n\r\nexport function setInitMovieID(location){\r\n  const initMovieID = getMovieIdFromLocationPathname(location)\r\n  if(initMovieID === '') return '157336' // interstellar\r\n  return initMovieID\r\n}","import { useState, useEffect } from 'react'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport './AppBackground.scss'\r\n\r\n\r\nexport default function AppBackground({fetchImg, fallbackImg}) {\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n  const [height, setHeight] = useState(window.innerHeight)\r\n\r\n  useEffect(() => {\r\n    const listener = () => {\r\n      setWidth(window.innerWidth)\r\n      setHeight(window.innerHeight)\r\n    }\r\n\r\n    window.addEventListener(\"resize\", listener)\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", listener)\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='BgGradient'/>\r\n      <AnimatePresence>\r\n        <motion.img \r\n          className='BgImage'\r\n          src={fetchImg ? fetchImg : fallbackImg}\r\n          key={fetchImg}\r\n\r\n          width={width}\r\n          height={height}\r\n\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1, delay :0.2 }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{duration: 1.5}}\r\n        />\r\n      </AnimatePresence>\r\n    </>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/no_image.2f8a70e1.png\";","import { motion, AnimatePresence } from \"framer-motion\"\r\nimport ImageFadeIn from \"react-image-fade-in\";\r\nimport no_image from 'images/no_image.png'\r\n\r\n\r\nexport default function StartPageCard ({\r\n  cardData, onClick, className, cardTransitionDuration, imgTransition, imgHeight, imgWidth}) {\r\n \r\n  return (\r\n  <AnimatePresence exitBeforeEnter>\r\n    <motion.div\r\n      className={className}\r\n      onClick={() => onClick(cardData.id)}\r\n\r\n      key={cardData.id}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: cardTransitionDuration, ease: 'easeInOut' }}\r\n    >\r\n      <div >\r\n          <ImageFadeIn\r\n            width={imgWidth}\r\n            height={imgHeight}\r\n            opacityTransition={imgTransition}\r\n            src={cardData.poster ? cardData.poster : no_image}\r\n            alt={`poster ${cardData.id}`}\r\n          />\r\n        <p>{cardData.title}</p>\r\n      </div>\r\n    </motion.div>\r\n  </AnimatePresence>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { PAGE_TRANSITION_TIME, START_PAGE_CARDS_TRANSITION } from 'Utils/Consts'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport PosterCard from 'ReusableComponents/PosterCard'\r\n\r\n\r\nexport default function StartPageCards() {\r\n  const {searchbarText, suggestions, dispPostersNum,pushToHistory, scrollBarRef, setSuggestions} = useContext(AppContext)\r\n\r\n  function selectedMovieInCardsPage(id){\r\n    pushToHistory(`/movie/${id}`)\r\n    setTimeout(() => {\r\n      // moves ScrollBar to top\r\n      scrollBarRef.current._ps.element.scrollTop = 0  \r\n      // console.log(\" scrollBarRef\", scrollBarRef.current._ps)\r\n      \r\n      setSuggestions([])\r\n    }, PAGE_TRANSITION_TIME * 1000) // exit animation length\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='StartPageCards'>\r\n      <div className='Container'>\r\n      <AnimatePresence exitBeforeEnter>\r\n        <motion.p\r\n          key={searchbarText}\r\n          className='title'\r\n          \r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1}}\r\n          exit={{ opacity: 0 }}\r\n          transition={{ duration: START_PAGE_CARDS_TRANSITION, ease: \"easeInOut\"}}>\r\n            {!searchbarText && 'Trending Now'}\r\n        </motion.p>\r\n      </AnimatePresence>\r\n\r\n\r\n      <div className='row'>\r\n        {suggestions.slice(0, dispPostersNum).map(item => \r\n          <PosterCard \r\n            className='smallCard col-xl-2 col-md-3 col-4'\r\n            cardData={item} \r\n            onClick={selectedMovieInCardsPage}\r\n            cardTransitionDuration={START_PAGE_CARDS_TRANSITION}\r\n            imgTransition={0.5}\r\n            imgHeight={'750'}\r\n            imgWidth={'500'}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/close.17a94979.svg\";","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport closeImg  from 'images/close.svg'\r\nimport {DebounceInput} from 'react-debounce-input';\r\n\r\nexport default function Searchbar(props) {\r\n  const {searchbarText, setSearchbarText, setOldSearchbarText,  oldSearchbarText, onSearchbarTextChanging} = useContext(AppContext)\r\n\r\n  const {onClick, onKeyPress} = props\r\n\r\n  function resetSearch() {\r\n    setSearchbarText('')\r\n    setOldSearchbarText('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => e.preventDefault()}>\r\n      <DebounceInput\r\n        debounceTimeout={250}\r\n        onChange={onSearchbarTextChanging}\r\n        type='text'\r\n        placeholder='Search Movie'\r\n        value={searchbarText !== '' ? searchbarText : oldSearchbarText}\r\n        onKeyPress={onKeyPress}\r\n        onClick={onClick}\r\n      />\r\n      <img \r\n        src={closeImg} \r\n        onClick={resetSearch}\r\n        alt=\"close search\"\r\n      />\r\n    </form>\r\n  )\r\n}","import 'styles/main.scss'\r\nimport Searchbar from 'ReusableComponents/Searchbar/Searchbar'\r\n\r\nexport default function StartPageSearch() {\r\n  return (\r\n    <div className='col-lg-6 col-md-8 col-sm-9 col-12 startPageSearchbar'>\r\n      <Searchbar/>\r\n    </div>\r\n  )\r\n}","import StartPageCard from './StartPageCards'\r\nimport StartPageSearch from './StartPageSearchbar'\r\nimport { PAGE_TRANSITION_TIME } from 'Utils/Consts'\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport default function StartPage() {\r\n  return (\r\n    <motion.div \r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1, delay :0.2 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: PAGE_TRANSITION_TIME }}\r\n    > \r\n      <StartPageSearch />\r\n      <StartPageCard />\r\n    </motion.div> \r\n  )\r\n}","import {createContext} from 'react'\r\n\r\nexport const MovieSearchbarContext = createContext(null)","import { useContext } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\n\r\n\r\nexport default function GotoOtherRoutesHooks() {\r\n  const { searchbarText, setSearchbarText, oldSearchbarText, pushToHistory, fetchPopularMoviesOnStartPage, setAllMoviesData} = useContext(AppContext)\r\n  const { setShowQuickSearchRes } = useContext(MovieSearchbarContext)\r\n\r\n  function selectedMovieInQuickSearch(id){\r\n    if (searchbarText && id !== undefined) {\r\n      pushToHistory(`/movie/${id}`)\r\n      setSearchbarText(oldSearchbarText)\r\n      setShowQuickSearchRes(false)\r\n    }\r\n  }\r\n\r\n  const gotoStarPage = () => {\r\n    setAllMoviesData([])\r\n    fetchPopularMoviesOnStartPage()\r\n    pushToHistory(`/`)\r\n  }\r\n\r\n  return {selectedMovieInQuickSearch, gotoStarPage}\r\n}","import {useState, useEffect} from 'react'\r\nimport closeImg  from 'images/close.svg'\r\n\r\nexport default function NoResult({className, fadeInConditionsArr, onClose, closeBtn}) {\r\n  const [fadeIn, setFadeIn] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // if every element in array is true\r\n    setFadeIn(fadeInConditionsArr.every(item => item))\r\n  }, [fadeInConditionsArr])\r\n\r\n  return (\r\n    <div className={`noResult ${className} ` + (fadeIn && 'fadeIn')}>\r\n        <p>no result</p>\r\n\r\n        {closeBtn === 'btn' &&\r\n          <p \r\n            className='btn'\r\n            onClick={() => onClose(false)}\r\n          >close</p>\r\n        }\r\n\r\n        {closeBtn === 'img' &&\r\n          <img \r\n            className='closeImg'\r\n            src={closeImg} \r\n            onClick={() => onClose(false)}\r\n            alt=\"close search results\"\r\n          />\r\n        }\r\n    </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\n\r\n\r\nexport default function HighlightTextInQuickSearchHooks() {\r\n  const { indexOfHighlightedMovie, setIndexOfHighlightedMovie } = useContext(MovieSearchbarContext)\r\n\r\n  function highligthText(text, highlight, index) {\r\n    const parts = text.split(new RegExp(`(${highlight})`, 'gi'))\r\n\r\n    return <span> { parts.map((part, i) => \r\n      <span \r\n        key={i} \r\n        style=\r\n        {(part.toLowerCase() === highlight.toLowerCase() && indexOfHighlightedMovie !== index)\r\n          ? { color: '#00FC87', fontWeight: 'bold' } \r\n          : part.toLowerCase() === highlight.toLowerCase() \r\n            ? { fontWeight: 'bold'}\r\n            : {}} \r\n      >\r\n        { part }\r\n      </span>)\r\n    } </span>;\r\n  }\r\n\r\n  const highlightMovieTextOnHover = e => {\r\n    setIndexOfHighlightedMovie(parseInt(e.target.getAttribute('index')))\r\n  }\r\n\r\n  return {highligthText, highlightMovieTextOnHover}\r\n}","import { useState, useEffect } from 'react'\r\n\r\nexport default function useCreateArrayToDisplayAndFadeout(array, sliceNum = array.length, disappearDelay = 800) {\r\n  // == Usage ==\r\n  // 1. Delays disapperance of displayed data from fetched array\r\n  // 2. Can give your app time to fadeout current displayed data\r\n\r\n  // == How it works ==\r\n  // creates clone of passed array.\r\n  // cloned array is updated instantly when passed not empty array\r\n  // cloned array is not updated for \"disappearDelay\" miliseconds when passed empty array. \r\n\r\n  const [clonedArray, setClonedArray] = useState([])\r\n\r\n  useEffect(() => {\r\n    const slicedArray = array\r\n    .slice(0, sliceNum)\r\n\r\n    if(array.length > 0){\r\n      setClonedArray(slicedArray)\r\n    } else {\r\n      const timer = setTimeout(() => {\r\n        setClonedArray(slicedArray)\r\n      }, disappearDelay);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [array, sliceNum, disappearDelay]);\r\n\r\n\r\n  return clonedArray\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { QUICK_SEARCH_TRANSITION } from 'Utils/Consts'\r\nimport HighlightTextInQuickSearchHooks from '../Hooks/SearchbarHooks/useHighlightTextInQuickSearch'\r\nimport GotoOtherRoutesHooks from '../Hooks/SearchbarHooks/useGotoOtherRoutes'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport ImageFadeIn from \"react-image-fade-in\"\r\nimport no_image from 'images/no_image.png'\r\n\r\nexport default function PosterLi({item, index}) {\r\n  const { indexOfHighlightedMovie } = useContext(MovieSearchbarContext)\r\n  const { searchbarText } = useContext(AppContext)\r\n\r\n  const {highligthText, highlightMovieTextOnHover} = HighlightTextInQuickSearchHooks()\r\n  const {selectedMovieInQuickSearch} = GotoOtherRoutesHooks()\r\n\r\n\r\n\r\n  return (\r\n    <AnimatePresence exitBeforeEnter>\r\n          <motion.li \r\n            className={'searchbar_li ' + \r\n            (indexOfHighlightedMovie === index && 'active')}\r\n\r\n            onClick={() => selectedMovieInQuickSearch(item.id)}\r\n            onMouseEnter={highlightMovieTextOnHover} \r\n            index={index}\r\n            key={item.id}\r\n\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            transition={{ duration: QUICK_SEARCH_TRANSITION }}\r\n          >\r\n            <div className='row'>\r\n              <ImageFadeIn \r\n                className='col-lg-2 col-md-3 col-sm-4 col-3'\r\n                width='500'\r\n                height='750'\r\n                opacityTransition={0.5}\r\n                src={item.poster ? item.poster : no_image} \r\n                alt={`poster ${item.id}`}\r\n              />\r\n              <p className='col-lg-10 col-md-9 col-sm-8 col-9'>\r\n                {highligthText(item.title, searchbarText, index)}\r\n              </p>\r\n            </div>\r\n          </motion.li>\r\n          </AnimatePresence>\r\n  )\r\n}\r\n","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { NUM_OF_DISP_RES_PC } from 'Utils/Consts'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport HighlightTextInQuickSearchHooks from 'Hooks/SearchbarHooks/useHighlightTextInQuickSearch'\r\nimport useCreateArrayToDisplayAndFadeout from 'Hooks/SearchbarHooks/useCreateArrayToDisplayAndFadeout'\r\nimport PosterLi from 'ReusableComponents/PosterLi'\r\n\r\nexport default function MovieSearchbarPCResults() {\r\n  const { showQuickSearchRes, indexOfHighlightedMovie } = useContext(MovieSearchbarContext)\r\n  const { searchbarText, pushToHistory, suggestions } = useContext(AppContext)\r\n  const {highlightMovieTextOnHover} = HighlightTextInQuickSearchHooks()\r\n  const displayedSuggestions = useCreateArrayToDisplayAndFadeout(suggestions, NUM_OF_DISP_RES_PC, 800)\r\n\r\n  return (\r\n    <ul \r\n      className={'searchbar_ul ' + \r\n      (showQuickSearchRes && searchbarText && 'fadeIn')} \r\n    >\r\n      {displayedSuggestions.map((item, index) => \r\n        <PosterLi item={item} index={index} />\r\n      )}\r\n\r\n      {<li className={'searchbar_li showMore ' + \r\n        (indexOfHighlightedMovie === NUM_OF_DISP_RES_PC && 'active')}\r\n\r\n        onMouseEnter={highlightMovieTextOnHover} \r\n        onClick={() => pushToHistory(`/`)} \r\n        index={NUM_OF_DISP_RES_PC}\r\n      >\r\n        <p>show more</p>\r\n      </li>}\r\n    </ul>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { QUICK_SEARCH_TRANSITION } from 'Utils/Consts'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\n\r\nexport default function SearchbarResultsTransitionWraper ({render}) {\r\n  const { showQuickSearchRes } = useContext(MovieSearchbarContext)\r\n  const { suggestions } = useContext(AppContext)\r\n\r\n  return (\r\n  <AnimatePresence exitBeforeEnter>\r\n    <motion.div\r\n      key={suggestions.length + showQuickSearchRes}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: QUICK_SEARCH_TRANSITION, ease: 'easeInOut' }}\r\n    >\r\n      {render()}\r\n    </motion.div>\r\n  </AnimatePresence>\r\n  )\r\n}","import {useState, useEffect} from 'react'\r\n\r\nexport default function useDelayShowNoResults(msDelay, stringDependency) {\r\n  // delays showing of NoResults component fot \"msDelay\" miliseconds\r\n\r\n  const [showNoResults, setShowNoResults] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(stringDependency === ''){\r\n      setShowNoResults(false)\r\n    } else {\r\n      const timer = setTimeout(() => {\r\n        setShowNoResults(true)\r\n      }, msDelay);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [stringDependency, msDelay]);\r\n\r\n\r\n  return showNoResults\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport NoResult from 'ReusableComponents/NoResult/NoResult'\r\nimport MovieSearchbarPCResults from './MovieSearchbarPCResults'\r\nimport SearchbarResultsTransitionWraper from 'ReusableComponents/SearchbarResultsTransitionWraper'\r\nimport useDelayShowNoResults from 'Hooks/SearchbarHooks/useDelayShowNoResults'\r\n\r\n\r\nexport default function MovieSearchbarPC() {\r\n  const { showQuickSearchRes, setShowQuickSearchRes} = useContext(MovieSearchbarContext)\r\n  const { searchbarText, suggestions } = useContext(AppContext)\r\n\r\n  const showNoResults = useDelayShowNoResults(1000, searchbarText)\r\n\r\n\r\n  return (\r\n  <div className='searchBarResPC'>\r\n    <SearchbarResultsTransitionWraper render={() => \r\n      <>\r\n        {suggestions.length > 0 && showQuickSearchRes\r\n        ? <MovieSearchbarPCResults/>\r\n        : <NoResult \r\n            className='searchbar_ul'\r\n            fadeInConditionsArr={[showQuickSearchRes, searchbarText, showNoResults]}\r\n            onClose={setShowQuickSearchRes}\r\n            closeBtn={'img'}\r\n          />\r\n        }\r\n      </>\r\n    }/>\r\n  </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { NUM_OF_DISP_RES_MOBILE, QUICK_SEARCH_TRANSITION } from 'Utils/Consts'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport useCreateArrayToDisplayAndFadeout from 'Hooks/SearchbarHooks/useCreateArrayToDisplayAndFadeout'\r\nimport GotoOtherRoutesHooks from 'Hooks/SearchbarHooks/useGotoOtherRoutes'\r\nimport PosterCard from 'ReusableComponents/PosterCard'\r\n\r\n\r\nexport default function MovieSearchbarMobileResults() {\r\n  const { showQuickSearchRes, setShowQuickSearchRes } = useContext(MovieSearchbarContext)\r\n  const { searchbarText, pushToHistory, suggestions } = useContext(AppContext)\r\n  const {selectedMovieInQuickSearch} = GotoOtherRoutesHooks()\r\n  const displayedSuggestions = useCreateArrayToDisplayAndFadeout(suggestions, NUM_OF_DISP_RES_MOBILE, 800)\r\n\r\n  return (\r\n    <div\r\n      className={'searchbar_container ' + \r\n      (showQuickSearchRes && searchbarText && 'fadeIn')} \r\n    >\r\n      <div className='searchbar_div'>\r\n        {displayedSuggestions.map(item => \r\n          <PosterCard \r\n            className='smallCard col-4'\r\n            cardData={item} \r\n            onClick={selectedMovieInQuickSearch}\r\n            cardTransitionDuration={QUICK_SEARCH_TRANSITION}\r\n            imgTransition={0.5}\r\n            imgHeight={'750'}\r\n            imgWidth={'500'}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div className='searchbar_li'>\r\n        <p \r\n          className='showMoreBtn'\r\n          onClick={() => pushToHistory(`/`)} \r\n          index={NUM_OF_DISP_RES_MOBILE}\r\n        >\r\n          show more\r\n        </p>\r\n        <p \r\n          className='showMoreClose'\r\n          onClick={() => setShowQuickSearchRes(false)}\r\n        >\r\n          close\r\n        </p>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport NoResult from 'ReusableComponents/NoResult/NoResult'\r\nimport ResultsMobile from './MovieSearchbarMobileResults'\r\nimport SearchbarResultsTransitionWraper from 'ReusableComponents/SearchbarResultsTransitionWraper'\r\nimport useDelayShowNoResults from 'Hooks/SearchbarHooks/useDelayShowNoResults'\r\n\r\n\r\nexport default function MovieSearchbarMobile() {\r\n  const { showQuickSearchRes, setShowQuickSearchRes} = useContext(MovieSearchbarContext)\r\n  const { searchbarText, suggestions } = useContext(AppContext)\r\n\r\n  const showNoResults = useDelayShowNoResults(1000, searchbarText)\r\n\r\n  \r\n  return (\r\n  <div className='searchBarResMobile'>\r\n    <SearchbarResultsTransitionWraper render={() => \r\n      <>\r\n        {suggestions.length > 0 && showQuickSearchRes\r\n        ? <ResultsMobile/>\r\n        : <NoResult \r\n            className='searchbar_container'\r\n            fadeInConditionsArr={[showQuickSearchRes, searchbarText, showNoResults]}\r\n            onClose={setShowQuickSearchRes}\r\n            closeBtn={'btn'}\r\n          />\r\n        }\r\n      </>\r\n    }/>\r\n  </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/tmdb.6852b1ef.svg\";","import 'styles/main.scss'\r\nimport { isMobile } from \"react-device-detect\"\r\nimport KeysPressedInSearchbarHooks from '../../../Hooks/SearchbarHooks/useKeysPressedInSearchbar'\r\nimport ShowHideQuickSearchHook from '../../../Hooks/SearchbarHooks/useShowHideQuickSearch'\r\nimport GotoOtherRoutesHooks from '../../../Hooks/SearchbarHooks/useGotoOtherRoutes'\r\nimport MovieSearchbarPC from './Results/MovieSearchbarPC'\r\nimport MovieSearchbarMobile from './Results/MovieSearchbarMobile'\r\nimport TMDBLogo from 'images/tmdb.svg'\r\nimport Searchbar from 'ReusableComponents/Searchbar/Searchbar'\r\n\r\n\r\nexport default function MovieSearchbar() {\r\n  const enterKeyInSearchbar = KeysPressedInSearchbarHooks()\r\n  const {node, OnSearchBarClicked} = ShowHideQuickSearchHook()\r\n  const {gotoStarPage} = GotoOtherRoutesHooks()\r\n\r\n  return (\r\n    <div className='movieSearchBar'>\r\n      <div className='row Container'>\r\n        <div className='col-xs-12 col-sm-3 col-lg-3 p-0'>\r\n          <img \r\n            src={TMDBLogo} \r\n            className='logo'\r\n            alt='The Movie Database Logo' \r\n            onClick={gotoStarPage}\r\n          />\r\n        </div>\r\n        \r\n        <div className='col-xs-12 col-sm-9 col-lg-9 p-0' ref={node}>\r\n          <Searchbar \r\n            onClick={OnSearchBarClicked} \r\n            onKeyPress={enterKeyInSearchbar}\r\n          />\r\n          {isMobile \r\n          ? <MovieSearchbarMobile/> \r\n          : <MovieSearchbarPC/>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport ArrowKeysReact from 'arrow-keys-react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { NUM_OF_DISP_RES_PC } from 'Utils/Consts'\r\nimport GotoOtherRoutesHooks from './useGotoOtherRoutes'\r\n\r\nexport default function KeysPressedInSearchbarHooks() {\r\n  const { suggestions, pushToHistory} = useContext(AppContext)\r\n  const { showQuickSearchRes, setShowQuickSearchRes, indexOfHighlightedMovie, setIndexOfHighlightedMovie } = useContext(MovieSearchbarContext)\r\n\r\n  const {selectedMovieInQuickSearch} = GotoOtherRoutesHooks()\r\n  \r\n  \r\n  function enterKeyInSearchbar(e){\r\n    const code = e.keyCode || e.which\r\n    if (code === 13 /* enter key */) {\r\n      if (!showQuickSearchRes) setShowQuickSearchRes(true)\r\n      if (showQuickSearchRes) {\r\n        if (indexOfHighlightedMovie === NUM_OF_DISP_RES_PC) {\r\n          pushToHistory(`/`)\r\n        } else {\r\n          selectedMovieInQuickSearch(suggestions[indexOfHighlightedMovie].id)\r\n        }\r\n      } \r\n    }\r\n  }\r\n\r\n  // Up and down arrow keys configuration\r\n  // allows using up and down key to select movie in quick search\r\n  ArrowKeysReact.config({\r\n    up: () => {\r\n      isNaN(indexOfHighlightedMovie)\r\n        ? setIndexOfHighlightedMovie(NUM_OF_DISP_RES_PC)\r\n        : indexOfHighlightedMovie < 0\r\n          ? setIndexOfHighlightedMovie(NUM_OF_DISP_RES_PC)\r\n          : setIndexOfHighlightedMovie(prevState => prevState - 1)\r\n    },\r\n    down: () => {\r\n      isNaN(indexOfHighlightedMovie)\r\n        ? setIndexOfHighlightedMovie(0)\r\n        : indexOfHighlightedMovie > NUM_OF_DISP_RES_PC\r\n          ? setIndexOfHighlightedMovie(0)\r\n          : setIndexOfHighlightedMovie(prevState => prevState + 1)\r\n    }\r\n  })\r\n\r\n\r\n  return enterKeyInSearchbar\r\n}","import { useEffect, useContext, useRef } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\n\r\nexport default function ShowHideQuickSearchHook() {\r\n  const { searchbarText, setSearchbarText, oldSearchbarText, setOldSearchbarText, showResInSearchBar } = useContext(AppContext)\r\n  const { setShowQuickSearchRes } = useContext(MovieSearchbarContext)\r\n  const node = useRef()\r\n\r\n  function hideOnOutsideClick(e) {\r\n    if (!node.current.contains(e.target)){\r\n      setShowQuickSearchRes(false) \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', hideOnOutsideClick)\r\n    return () => {\r\n      // cleanup function - called when unmounted\r\n      document.removeEventListener('mousedown', hideOnOutsideClick)\r\n    }\r\n  }, [])\r\n\r\n  const OnSearchBarClicked = async e => {\r\n    setShowQuickSearchRes(true)\r\n    if (searchbarText === '') {\r\n      showResInSearchBar(oldSearchbarText)\r\n      setSearchbarText(oldSearchbarText)\r\n      setOldSearchbarText('')\r\n    }\r\n  }\r\n\r\n  return {node, OnSearchBarClicked}\r\n}","export function nestedDataToString(nestedData) {\r\n  let nestedArray = []\r\n  if (nestedData !== undefined) {\r\n    nestedData.forEach(item => {\r\n      nestedArray.push(item.name)\r\n    })\r\n  }\r\n  // returns string compiled from array\r\n  return nestedArray.join(', ') \r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { POSTER_W500 } from 'Utils/Consts'\r\nimport { nestedDataToString } from './MovieCardFunctions'\r\nimport { PAGE_TRANSITION_TIME } from 'Utils/Consts'\r\nimport no_image from 'images/no_image.png'\r\n\r\nexport default function MovieInfo () {\r\n  const { movieData } = useContext(AppContext)\r\n  const { original_title, overview, tagline, poster_path, production_companies, genres, release_date, runtime } = movieData\r\n  let { revenue, vote_average } = movieData\r\n\r\n  const productionList = nestedDataToString(production_companies),\r\n        genresList = nestedDataToString(genres)\r\n\r\n\r\n  return (\r\n    <div className='movieCard'>\r\n      <AnimatePresence exitBeforeEnter>\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{ duration: PAGE_TRANSITION_TIME }}\r\n          className='Container row'\r\n          key={original_title}\r\n        >\r\n          <div className='metaDataContainer col-12 col-md-7 col-lg-8'>\r\n            <h1>{original_title}</h1>\r\n            <span className='tagline'>{tagline}</span>\r\n            <p>{overview}</p>\r\n            <div className='additionalDetails'>\r\n              <span className='genreList'>{genresList}</span>\r\n              <span className='productionList'>{productionList}</span>\r\n              <div className='row releaseDetails'>\r\n\r\n                <div className='col-6'>\r\n                  Original Release:\r\n                  <span className='metaData'>{release_date}</span>\r\n                </div>\r\n                <div className='col-6'>\r\n                  Running Time: \r\n                  <span className='metaData'>\r\n                    {runtime} min\r\n                  </span>\r\n                </div>\r\n                <div className='col-6'>\r\n                  Box Office: \r\n                  <span className='metaData'>\r\n                    {revenue ? `${parseInt(revenue).toLocaleString()} $` : '-'}\r\n                  </span>\r\n                </div>\r\n                <div className='col-6'>\r\n                  Vote Average:\r\n                  <span className='metaData'>\r\n                    {vote_average ? vote_average : '-'}\r\n                  </span>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div \r\n          className='posterContainer order-md-first col-12 col-md-5 col-lg-4'>\r\n            <img\r\n              className='poster'\r\n              src={poster_path !== null \r\n                ? POSTER_W500 + poster_path \r\n                : no_image}\r\n              alt='poster'\r\n            />\r\n          </div>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { motion } from \"framer-motion\"\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { PAGE_TRANSITION_TIME } from 'Utils/Consts'\r\nimport MovieSearch from './MovieSearchbar/MovieSearchbar'\r\nimport MovieCard from './MovieCard/MovieCard'\r\n\r\n\r\nexport default function MoviePage() {\r\n  const [showQuickSearchRes, setShowQuickSearchRes] = useState(false)\r\n  const [indexOfHighlightedMovie, setIndexOfHighlightedMovie] = useState()\r\n\r\n  return (\r\n    <MovieSearchbarContext.Provider value={{ showQuickSearchRes, setShowQuickSearchRes, indexOfHighlightedMovie, setIndexOfHighlightedMovie}}>\r\n      <motion.div \r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1, delay :0.2}}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: PAGE_TRANSITION_TIME }}\r\n      >    \r\n        <MovieSearch /> \r\n        <MovieCard />\r\n      </motion.div>\r\n    </MovieSearchbarContext.Provider>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/BgGreen.a17d9a1b.jpg\";","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport 'styles/main.scss'\r\nimport { Route, Switch, useLocation, useHistory } from 'react-router-dom'\r\nimport { AnimatePresence } from \"framer-motion\"\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport AppScroolbar from 'ReusableComponents/Scroolbar/AppScrollbar'\r\nimport { getMoviesDataToDisplayInSearch, getAllMoviesData, getMovieData, createSearchMoviesUrl, setInitMovieID } from 'Utils/FetchFunctions'\r\nimport { POPULAR_MOVIES_URL, BASE_BG_IMG_URL } from 'Utils/Consts'\r\nimport { getCurrentPageUrl, getMovieIdFromLocationPathname } from 'Utils/RoutesFunctions'\r\nimport ArrowKeysReact from 'arrow-keys-react'\r\nimport AppBackground from 'ReusableComponents/AppBackground/AppBackground'\r\nimport StartPage from 'AppFiles/StartPage/StartPage'\r\nimport MoviePage from 'AppFiles/Movie/MoviePage'\r\nimport { isMobile } from \"react-device-detect\"\r\nimport BgGreen from 'images/BgGreen.jpg'\r\n\r\nexport default function App () {\r\n  const location = useLocation()  // key to app routes\r\n  const history = useHistory()\r\n  const pushToHistory = url => history.push(url)\r\n\r\n\r\n// ==== Fetch StartPage ====\r\n  const [backgroundIMG, setBackgroundIMG] = useState()\r\n  const [suggestions, setSuggestions] = useState([])\r\n  const [searchbarText, setSearchbarText] = useState('')\r\n\r\n  async function fetchPopularMoviesOnStartPage() {\r\n    setSuggestions(await getMoviesDataToDisplayInSearch(POPULAR_MOVIES_URL))\r\n  }\r\n\r\n  // if search is empty on main page it displays popular movies\r\n  // loads at page starup because searchbarText === '' at start\r\n  // checks this condition every time\r\n  useEffect(() => {\r\n    if(searchbarText === '' && location.pathname ==='/') fetchPopularMoviesOnStartPage()\r\n    else if(searchbarText === '') {\r\n      setTimeout(() => {\r\n        setSuggestions([])\r\n      }, 600) // debounc time + animation time\r\n    }\r\n  }, [searchbarText])\r\n// ==== END Fetch StartPage ====\r\n\r\n\r\n// ==== Fetch movie page based on movieID parameter ====\r\n  const [movieID, setMovieID] = useState(() => setInitMovieID(location))\r\n  const [movieData, setMovieData] = useState({})\r\n  \r\n  useEffect(async () => {\r\n    movieID && setMovieData(await getMovieData(movieID))\r\n  }, [movieID])\r\n\r\n  // implements back button in browser\r\n  // allows to go back to previous movie on moviePage\r\n  useEffect(() => {\r\n    setMovieID(getMovieIdFromLocationPathname(location))\r\n  }, [location.pathname])\r\n  \r\n// ==== END Fetch movie page ====\r\n\r\n\r\n\r\n// ==== Search state and functions ====\r\n  const [allMoviesData, setAllMoviesData] = useState([])\r\n  const [oldSearchbarText, setOldSearchbarText] = useState('')\r\n  const [dispPostersNum, setDispPostersNum] = useState(isMobile ? 9 : 12)\r\n\r\n  const onSearchbarTextChanging = e => {\r\n    const value = e.target.value.replace(/[^\\w\\s]/gi, '')\r\n    setSearchbarText(value)\r\n    showResInSearchBar(value)\r\n  }\r\n\r\n  const showResInSearchBar = async (value) => {\r\n    setDispPostersNum(isMobile ? 6 : 12)\r\n    if (value.length === 0) setOldSearchbarText('')\r\n    if (value.length >= 1) {\r\n      const allMoviesData = await getAllMoviesData(createSearchMoviesUrl(value))\r\n      const dataToDisplay = await getMoviesDataToDisplayInSearch(allMoviesData)\r\n\r\n      setAllMoviesData(allMoviesData)\r\n      setSuggestions(dataToDisplay)\r\n      setOldSearchbarText(value)\r\n    }\r\n    \r\n    isMobile && setTimeout(() => {\r\n      setDispPostersNum(9)\r\n    }, 1000) // adds 3 more posters\r\n  }\r\n  \r\n  // ==== END Search state and functions ====\r\n\r\n  \r\n  // == ScrollBar stuff ==\r\n  const infiniteScroll = e => {\r\n    // console.log('infinite Scroll')\r\n    setDispPostersNum(20)\r\n  }\r\n\r\n  const scrollBarRef = useRef(null)\r\n  // == END ScrollBar stuff ==\r\n\r\n\r\n// ==== Console log stuff ====\r\n  useEffect(() => {\r\n    console.log({suggestions})\r\n  }, [suggestions])\r\n\r\n  useEffect(() => {\r\n    console.log({movieData})\r\n    setBackgroundIMG(movieData.backdrop_path && `${BASE_BG_IMG_URL}${movieData.backdrop_path}`)\r\n  }, [movieData])\r\n\r\n  useEffect(() => {\r\n    console.log(`searchbarText: ${searchbarText}`)\r\n  }, [searchbarText])\r\n\r\n  // useEffect(() => {\r\n  //   console.log(`backgroundIMG: ${backgroundIMG}`)\r\n  // }, [backgroundIMG])\r\n\r\n// ==== END Console log stuff ====\r\n\r\n\r\n  return (\r\n    <div>\r\n      <AppBackground \r\n        fetchImg={backgroundIMG} \r\n        fallbackImg={BgGreen}\r\n      />\r\n\r\n      <div\r\n        id='app'\r\n        {...ArrowKeysReact.events}\r\n        tabIndex='1'\r\n      >\r\n        <AppContext.Provider \r\n          value={{movieID, movieData, searchbarText, setSearchbarText, oldSearchbarText, setOldSearchbarText, suggestions, setSuggestions,  onSearchbarTextChanging, allMoviesData, setAllMoviesData, setMovieID, fetchPopularMoviesOnStartPage, showResInSearchBar, history, pushToHistory, dispPostersNum, setDispPostersNum, infiniteScroll, scrollBarRef}}\r\n        >\r\n          <AppScroolbar>\r\n            <AnimatePresence exitBeforeEnter>\r\n              <Switch \r\n                location={location} \r\n                key={getCurrentPageUrl(location)}\r\n              >\r\n                <Route exact path='/' render={() => <StartPage/>} />\r\n                <Route exact path={`/movie/:${movieID}`} render={() => <MoviePage/>} />\r\n              </Switch>\r\n            </AnimatePresence>\r\n          </AppScroolbar>\r\n        </AppContext.Provider>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport App from 'App'\r\nimport * as serviceWorker from 'testingFiles/serviceWorker'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}