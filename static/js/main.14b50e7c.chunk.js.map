{"version":3,"sources":["images/tmdb.svg","Scroolbar/Scroolbar.js","Search.js","Card.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Example","this","setState","onXReachEnd","console","log","props","show","text","className","children","Component","SearchBox","suggestions","cursor","queryData","showMore","sliceNumber","oldText","node","handleChange","enterPressed","handleClickOnInput","suggestionsSelected","setCursor","onMouseEnterHandle","e","parseInt","target","getAttribute","useEffect","length","src","TMDBLogo","alt","ref","onSubmit","preventDefault","onChange","type","placeholder","autocomplete","value","onKeyPress","onClick","map","item","index","onMouseEnter","key","highlight","parts","split","RegExp","part","i","style","toLowerCase","color","fontWeight","getHighlightedText","visibility","nestedDataToString","nestedData","nestedArray","undefined","forEach","push","name","join","Card","data","posterIMG","poster_path","production","production_companies","productionCountries","production_countries","genres","totalRevenue","revenue","productionList","genresList","backdropIMG","backdrop_path","vote_average","numeral","format","document","body","backgroundImage","TransitionGroup","CSSTransition","movieID","timeout","classNames","original_title","tagline","overview","release_date","runtime","id","App","useState","setMovieID","url","setData","a","axios","get","res","fetchApi","ArrowKeysReact","config","up","isNaN","prevState","down","setSuggestions","setText","setQueryData","setSliceNumber","setOldText","setShow","useRef","addEventListener","handleClick","removeEventListener","current","contains","movies","slice","events","tabIndex","outline","replace","then","response","results","setTimeout","keyCode","which","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.14b50e7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tmdb.27b65cb4.svg\";","import React, { Component } from 'react';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport '../styles/main.scss'\r\nimport './ScroolbarStyle.scss';\r\n\r\nexport default class Example extends Component {\r\n  componentDidMount() {\r\n      this.setState({ onXReachEnd: () => console.log() });\r\n  }\r\n\r\n  render() {\r\n    const {show, text} = this.props\r\n    return (\r\n      <ScrollBar className={(show && text) ? 'scroolBar' : 'offScroolBar scroolBar'}>\r\n        {this.props.children}\r\n      </ScrollBar>\r\n    )\r\n  }\r\n}","import React, {useEffect, useRef, useState} from 'react'\r\nimport TMDBLogo from './images/tmdb.svg'\r\nimport './styles/main.scss'\r\nimport './Search.css'\r\nimport Scroolbar from './Scroolbar/Scroolbar'\r\n\r\n\r\nexport default function SearchBox (props) {\r\n  const {show, text, suggestions, cursor, queryData, showMore, sliceNumber, oldText, node, handleChange, enterPressed, handleClickOnInput, suggestionsSelected, setCursor} = props\r\n\r\n\r\n// ==== Pod�wietlenie tekstu ====\r\nfunction getHighlightedText(text, highlight, index) {\r\n  const parts = text.split(new RegExp(`(${highlight})`, 'gi'));\r\n  return <span> { parts.map((part, i) => \r\n    <span \r\n      key={i} \r\n      style=\r\n      {(part.toLowerCase() === highlight.toLowerCase() && props.cursor !== index)\r\n        ? { color: '#00FC87', fontWeight: 'bold' } \r\n        : part.toLowerCase() === highlight.toLowerCase() \r\n          ? { fontWeight: 'bold'}\r\n          : {}} \r\n    >\r\n        { part }\r\n    </span>)\r\n  } </span>;\r\n}\r\n\r\nconst onMouseEnterHandle = e => {\r\n  setCursor(parseInt(e.target.getAttribute('index')))\r\n}\r\n// ==== END Pod�wietlenie tekstu ====\r\n\r\n\r\n  // == console log stuff ==\r\nuseEffect(() => {\r\n  console.log('queryData.length: ' + queryData.length)\r\n  console.log('suggestions.length: ' + suggestions.length)\r\n  console.log('sliceNumber: ' + sliceNumber)\r\n}, [queryData, sliceNumber])\r\n  // == END console log stuff ==\r\n\r\n\r\nconst renderSugestions = () => {\r\n  if (queryData.length > 0) {\r\n    return (\r\n      <Scroolbar show={show} text={text}>\r\n      <ul \r\n        className={(show && text) ? 'animate list' : 'list'} >\r\n      {suggestions.map((item, index) => \r\n        <li \r\n          className={cursor === index ? 'active tt-suggestion' : 'tt-suggestion'}\r\n          onClick={()=> suggestionsSelected(item)}\r\n          onMouseEnter={onMouseEnterHandle} \r\n          index={index}\r\n          key={index}\r\n        >\r\n          <div className='row'>\r\n            <img src={item[2]} className='col-lg-2 col-md-3 col-sm-4 col-3 Image'/>\r\n            <p className='col-lg-10 col-md-9 col-sm-8 col-9 textSugestion sugest'>\r\n              {getHighlightedText(item[0], text, index)}\r\n            </p>\r\n          </div>\r\n        </li>)}\r\n        \r\n        <li style={{visibility: queryData.length > suggestions.length ? \"visible\": \"collapse\"}}>\r\n          <p \r\n            onClick={showMore} \r\n            index={sliceNumber}\r\n            className={cursor === sliceNumber ?'active textSugestion showMore tt-suggestion' : 'textSugestion showMore tt-suggestion'}>\r\n              {(suggestions.length > 0)\r\n                ? 'show more'\r\n                : 'no result'}\r\n          </p>\r\n        </li>\r\n      </ul>\r\n      </Scroolbar>\r\n    )\r\n  } else {\r\n    if (text) {\r\n      return (\r\n        <ul className='animate list showMore noResult'>\r\n          <li>no result</li>\r\n        </ul>\r\n        )\r\n      } \r\n  }\r\n}\r\n\r\n  return (\r\n    <div className='col-xs-12 search-container nopadding'>\r\n      <div className='row'>\r\n        <div className='col-xs-12 col-sm-3 col-lg-3'>\r\n          <img src={TMDBLogo} className='logo' alt='The Movie Database' />\r\n        </div>\r\n        <div className='col-xs-12 col-sm-9 col-lg-9 searchInside' ref={node}>\r\n          <form className='searchbox' onSubmit={e => { e.preventDefault()}}>\r\n            <input\r\n              onChange={handleChange}\r\n              className='searchbox__input typeahead myform'\r\n              type='text'\r\n              placeholder='Search Movie Title...'\r\n              autocomplete=\"off\"\r\n              value={text !== '' ? text : oldText}\r\n              onKeyPress={enterPressed}\r\n              onClick={handleClickOnInput}\r\n            />\r\n          </form>\r\n          {renderSugestions()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {useEffect, useState, useRef} from 'react'\r\nimport './styles/main.scss'\r\nimport './Card.css'\r\nimport numeral from 'numeral'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\n\r\nfunction nestedDataToString(nestedData) {\r\n  let nestedArray = [],\r\n      resultString;\r\n  if(nestedData !== undefined){\r\n    nestedData.forEach(function(item){\r\n      nestedArray.push(item.name);\r\n    });\r\n  }\r\n  resultString = nestedArray.join(', '); // array to string\r\n  return resultString;\r\n}\r\n\r\nexport default function Card(props) {\r\nlet data = props.data\r\n\r\nlet posterIMG = 'https://image.tmdb.org/t/p/w500' + data.poster_path,\r\n    production = data.production_companies,\r\n    productionCountries = data.production_countries,\r\n    genres = data.genres,\r\n    totalRevenue = data.revenue,\r\n    productionList = nestedDataToString(production),\r\n    productionCountriesList = nestedDataToString(productionCountries),\r\n    noData = '-',\r\n    genresList = nestedDataToString(genres),\r\n    backdropIMG = 'https://image.tmdb.org/t/p/original' + data.backdrop_path\r\n\r\n\r\n  // conditional statements for no data\r\n  if (data.vote_average === 'undefined' || data.vote_average === 0) {\r\n    data.vote_average = noData\r\n  }\r\n\r\n  // dodaje $ i przecinki\r\n  if (totalRevenue === 'undefined' || totalRevenue === 0) {\r\n    totalRevenue = noData\r\n  } else {\r\n    totalRevenue = numeral(data.revenue).format('($0,0)');\r\n  }\r\n\r\n  if(data.poster_path== null){\r\n    posterIMG = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSols5HZxlQWyS9JY5d3_L9imbk0LiziHiyDtMZLHt_UNzoYUXs2g'\r\n  }\r\n\r\n  // if(data.backdrop_path == null){\r\n  //   backdropIMG = 'https://wallpaperaccess.com/full/670449.jpg'\r\n  // }\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundImage = 'url(' + backdropIMG + ')'\r\n  })\r\n\r\n  return (\r\n    <TransitionGroup className='helo nomargin'>\r\n    <CSSTransition \r\n      key={props.movieID}\r\n      timeout={2000}\r\n      classNames='fade'\r\n      >\r\n    <div className='col-12 cardcont nopadding row'>\r\n\r\n      <div className='meta-data-container col-12 col-md-7 col-lg-8'>\r\n        <h1>{data.original_title}</h1>\r\n        <span className=\"tagline\">{data.tagline}</span>\r\n        <p>{data.overview}</p>\r\n        <div className=\"additional-details\">\r\n          <span className=\"genre-list\">{genresList}</span>\r\n          <span className=\"production-list\">{productionList}</span>\r\n          <div className=\"row nopadding release-details\">\r\n            <div className=\"col-6\"> Original Release: <span className=\"meta-data\">{data.release_date}</span></div>\r\n            <div className=\"col-6\"> Running Time: <span className=\"meta-data\">{data.runtime} min</span> </div>\r\n            <div className=\"col-6\"> Box Office: <span className=\"meta-data\">{totalRevenue}</span></div>\r\n            <div className=\"col-6\"> Vote Average: <span className=\"meta-data\">{data.vote_average}</span></div>\r\n          </div>\r\n        </div> \r\n      </div>\r\n\r\n      <div className=\"poster-container nopadding order-md-first col-12 col-md-5 col-lg-4\">\r\n        <img id=\"postertest\" className='poster' src={posterIMG}/>\r\n      </div>\r\n    </div>\r\n  </CSSTransition>\r\n  </TransitionGroup>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\nimport Search from './Search'\nimport Card from './Card'\nimport axios from 'axios'\nimport './styles/main.scss'\nimport ArrowKeysReact from 'arrow-keys-react'\n\n// myKey c61f42f858306ba4c3de925ee77d581d\n\nexport default function App () {\n  // ==== Fetch first page ====\n  const [movieID, setMovieID] = useState(157336)\n  const url = `https://api.themoviedb.org/3/movie/${movieID}?&api_key=cfe422613b250f702980a3bbf9e90716`\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    document.body.style.backgroundImage = \"url(https://lh3.googleusercontent.com/ZdEaJCCAfkI-PrkHmY0XYFfbdFlgDBFC6jJCLj9hN5THcsKd9GpE0j8pS8HM3z-QCrlkPvUxqxks6yXHO2X4H16YHoMLYcKg7genJH34cWzNiobbZhxQow1tqav6TfXVbrHQ1keP80bVGOgdJt4_UkQMLTq3HqlmJquH5Mvubn7ixo7rno31drUkYIeFgB5mxW4psxvbFvgRTM5CbP8J-GTQ5Ur20j-pBBhU6K2Du4C30G-gPyII7ZAvxzFVTdx_P_VAJLbjrUQ4XIv5PFnbUepa4sQFeJw1Brv4lNtmogTTRZFB2ZuZkP0U_WbFAKgHcgcr8T6WHp1kGG2zyMn3O7x7Qx0vLSNn35Fe2EtyxGg2N8mRuIIoPRC8GYxLxuXZQ1Ol-xls2A9YCVfbF3T7Wb8FG7D7SytqmXl9GEIihcnZNlfOlIKjRs9eOcuOHSIBK5zi0P4ztyJTRE0ztuPDrJ6Cpsfyt4Buofv3VKkysOu_vd936QaWGy1MLLigpOOqv1UWXWq8jbCgkbNEWBbEXAkEyhgda8jDQxy35kTwPFDnPz7Y1-jX1tOweIN498XKBLUZ95QcCG2oiRM2pymRdPVDzij3oydewERzjdnJA4ZhcTsozP6tlWSvOBzZt6uGw-Y-Ve12SE7Q2N07-7YhQ58KbGZTlEjkw9M3YEC6D35dm880Fuz7QY1ZROisPw=w1499-h843-no?authuser=0)\"\n    async function fetchApi () {\n      const res = await axios.get(url)\n        setData(res.data)\n        console.log(res.data)\n    }\n    fetchApi()\n  }, [movieID])\n  // ==== END Fetch first page ====\n\n\n  // ==== Search arrow up and down logic ====\n  const [cursor, setCursor] = useState(0)\n  ArrowKeysReact.config({\n    up: () => {\n      isNaN(cursor) ? setCursor(sliceNumber) : \n      cursor < 0 ? setCursor(sliceNumber) : setCursor(prevState => prevState - 1)\n    },\n    down: () => {\n      isNaN(cursor) ? setCursor(0) : \n      cursor > sliceNumber ? setCursor(0) : setCursor(prevState => prevState + 1)\n    }\n  })\n\n  useEffect(() => {\n    console.log(cursor)\n  }, [cursor])\n\n  const enterPressed = e => {\n    var code = e.keyCode || e.which\n    if (code === 13) { // enter key\n      // zmienna kursor kt�ra �ledzi kt�ry li jest pod�wietlony daje nam indeks za pomoc� kt�rego mo�emy uzyska� id filmu z oryginalnej tablicy\n      // dodanie pojawienie paska po wcisnieciu enter\n      if (show){\n        if (cursor === sliceNumber){\n          showMore()\n        } else {\n          suggestionsSelected(suggestions[cursor])\n          setShow(false)\n          setText(oldText)\n        }\n      } else {\n        if (cursor === sliceNumber){\n          showMore()\n        } else {\n          setText(oldText)\n          setOldText('')\n        }\n      setShow(true)\n      console.log(show)\n    }\n    }\n  } // ==== END Search arrow up and down logic ====\n   \n\n  // ==== Search state and functions ====\n  const [suggestions, setSuggestions] = useState([])\n  const [text, setText] = useState(null)\n  const [queryData, setQueryData] = useState([])\n  const [sliceNumber, setSliceNumber] = useState(5)\n  const [oldText, setOldText] = useState('')\n\n  const handleChange = e => {\n    const value = e.target.value.replace(/[^\\w\\s]/gi, '') \n    setText(value)\n    if (value.length === 0) { setOldText('') }\n    if (value.length >= 1) {\n      let url = `https://api.themoviedb.org/3/search/movie?query=%${value}&api_key=cfe422613b250f702980a3bbf9e90716`\n      axios.get(url).then(response => {\n        const res = (response.data.results)\n        let movies = res.map(a => [a.original_title, a.id, `https://image.tmdb.org/t/p/w500${a.poster_path}`]).slice(0, sliceNumber)\n        console.log(movies)\n        setSuggestions(movies)\n        setQueryData(response.data.results)\n        setOldText(value)\n      })\n    } else {\n      setCursor(-1)\n      setTimeout(() => {  // okno sugesti z op�nieniem ga�nie\n        setSuggestions([])\n      }, 500);\n    }\n  }\n\n  const suggestionsSelected = value => {\n    if (text && value !== undefined) {\n      setOldText(text)\n      setText('')\n      setMovieID(value[1])\n    }\n  } \n\n  const handleClickOnInput = e => {\n    if (text === '') {\n      setText(oldText)\n      setOldText('')\n    }\n  }\n// ==== END Search state and functions ====\n\n// ==== sugeston hide on click away ====\nconst [show, setShow] = useState(false)\nconst node = useRef()\n\nuseEffect(() => {\n  document.addEventListener(\"mousedown\", handleClick);\n  return () => { // return function to be called when unmounted\n    document.removeEventListener(\"mousedown\", handleClick);\n  };\n}, []);\n\nconst handleClick = e => {\n  if (node.current.contains(e.target)) { // inside click\n    setShow(true)\n  } else {                               // outside click \n    setShow(false)\n  }\n};\n// ==== END sugeston hide on clic kaway ====\n\n  \n// *** show more button ***\n  const showMore = e => {\n    suggestions.length > 0\n    ? setSliceNumber(sliceNumber + 5)\n    : console.log()\n  }\n  useEffect(() => {\n    console.log(sliceNumber)\n    let movies = queryData.map(a => [a.original_title, a.id, `https://image.tmdb.org/t/p/w500${a.poster_path}`]).slice(0, sliceNumber)\n    console.log(movies)\n    setSuggestions(movies)\n  },[sliceNumber])\n  // ==== END Search state and functions ====\n\n  return (\n    <div\n      className='container-fluid w-95 h-95'\n      id='app'\n      {...ArrowKeysReact.events}\n      tabIndex='1'\n      style={{ outline: 0, }}\n    >\n      <div className='row'>\n        <div className='col-12 col-lg-10 offset-lg-1 myContainer'>\n          <Search\n            handleChange={handleChange}\n            suggestionsSelected={suggestionsSelected}\n            text={text}\n            suggestions={suggestions}\n            cursor={cursor}\n            setCursor={setCursor}\n            enterPressed={enterPressed}\n            showMore={showMore}\n            sliceNumber={sliceNumber}\n            oldText={oldText}\n            handleClickOnInput={handleClickOnInput}\n            show={show}\n            node={node}\n            queryData={queryData}\n          />\n          <Card data={data} movieID={movieID}/>\n        </div>\n      </div>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap'\nimport \"bootswatch/dist/darkly/bootstrap.min.css\"\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}