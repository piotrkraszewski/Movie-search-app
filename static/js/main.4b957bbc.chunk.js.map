{"version":3,"sources":["AppFiles/Contexts/AppContext.js","utilities/Scroolbar/AppScrollbar.js","utilities/Consts.js","utilities/RoutesFunctions.js","utilities/FetchFunctions.js","utilities/CalculateWindowHeightHook.js","images/BgGreen2.jpg","AppFiles/AppBackground.js","images/no_image.png","AppFiles/StartPage/StartPageCards.js","images/close.svg","AppFiles/Movie/MovieSearchbar/Hooks/Searchbar.js","AppFiles/StartPage/StartPageSearchbar.js","AppFiles/StartPage/StartPage.js","AppFiles/Contexts/MovieSearchbarContext.js","AppFiles/Movie/MovieSearchbar/Hooks/GotoOtherRoutesHooks.js","AppFiles/Movie/MovieSearchbar/Results/MovieSearchbarResultsPC.js","AppFiles/Movie/MovieSearchbar/Hooks/HighlightTextInQuickSearchHooks.js","AppFiles/Movie/MovieSearchbar/Results/MovieSearchbarResultsMobile.js","images/tmdb.svg","AppFiles/Movie/MovieSearchbar/MovieSearchbar.js","AppFiles/Movie/MovieSearchbar/Hooks/KeysPressedInSearchbarHooks.js","AppFiles/Movie/MovieSearchbar/Hooks/ShowHideQuickSearchHook.js","AppFiles/Movie/MovieCard/MovieCardFunctions.js","AppFiles/Movie/MovieCard/MovieCard.js","AppFiles/Movie/MoviePage.js","App.js","testingFiles/serviceWorker.js","index.js"],"names":["AppContext","createContext","AppScrollbar","props","infiniteScroll","useContext","isMobile","className","children","onYReachEnd","e","API_KEY","BASE_API_URL","POSTER_W500","POPULAR_MOVIES_URL","getCurrentPageUrl","location","pathname","substring","lastIndexOf","getMovieIdFromLocationPathname","getMoviesDataToDisplayInSearch","input","a","getAllMoviesData","allMoviesData","console","error","map","movie","title","original_title","id","poster","poster_path","url","axios","get","response","data","results","createSearchMoviesUrl","value","getMovieData","movieID","CalculateWindowHeightHook","useEffect","setDocHeight","document","documentElement","style","setProperty","window","innerHeight","addEventListener","removeEventListener","AppBackground","backgroundIMG","img","initial","opacity","animate","exit","transition","duration","src","BgGreen2","FullscreenSearch","searchbarText","suggestions","dispPostersNum","slice","item","exitBeforeEnter","div","to","loading","no_image","alt","Searchbar","setSearchbarText","setOldSearchbarText","oldSearchbarText","onSearchbarTextChanging","onClick","onKeyPress","onSubmit","preventDefault","debounceTimeout","onChange","type","placeholder","closeImg","StartPageSearch","StartPage","MovieSearchbarContext","GotoOtherRoutesHooks","pushToHistory","fetchPopularMoviesOnStartPage","setAllMoviesData","setShowQuickSearchRes","selectedMovieInQuickSearch","undefined","gotoStarPage","MovieSearchbarResults","showQuickSearchRes","indexOfHighlightedMovie","setIndexOfHighlightedMovie","highligthText","text","highlight","index","parts","split","RegExp","part","i","toLowerCase","color","fontWeight","highlightMovieTextOnHover","parseInt","target","getAttribute","HighlightTextInQuickSearchHooks","useState","liHeight","setLiHeight","heightRef","useRef","current","offsetHeight","length","li","onMouseEnter","minHeight","ref","divHeight","setDivHeight","MovieSearch","enterKeyInSearchbar","ArrowKeysReact","config","up","isNaN","prevState","down","keyCode","which","KeysPressedInSearchbarHooks","showResInSearchBar","node","hideOnOutsideClick","contains","OnSearchBarClicked","ShowHideQuickSearchHook","TMDBLogo","nestedDataToString","nestedData","nestedArray","forEach","push","name","join","MovieInfo","movieData","overview","tagline","production_companies","genres","release_date","runtime","revenue","vote_average","productionList","genresList","toLocaleString","Movie","Provider","App","useLocation","history","useHistory","setBackgroundIMG","setSuggestions","setTimeout","initMovieID","setInitMovieID","setMovieID","setMovieData","log","dataToDisplay","setDispPostersNum","backdrop_path","events","tabIndex","replace","exact","path","render","Boolean","hostname","match","ReactDOM","basename","process","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4b957bbc.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nexport const AppContext = createContext(null)","import { useContext } from 'react'\r\nimport ScrollBar from 'react-perfect-scrollbar'\r\nimport { isMobile } from \"react-device-detect\"\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport './ScroolbarStyle.scss'\r\n\r\nexport default function AppScrollbar (props) {\r\n  // displays perfect scrollbar if not on mobile because I couldn't add refresh gesture on mobile\r\n  // https://github.com/goldenyz/react-perfect-scrollbar/issues/101\r\n\r\n  const { infiniteScroll } = useContext(AppContext)\r\n\r\n  return (\r\n    isMobile ? (\r\n      <div className=\"overflow-y-auto\">\r\n        {props.children}\r\n      </div>\r\n    ) : (\r\n      <ScrollBar className='AppScroolbar' onYReachEnd={e => infiniteScroll(e)}>\r\n        {props.children}\r\n      </ScrollBar>\r\n  ))\r\n}","export const API_KEY = 'api_key=cfe422613b250f702980a3bbf9e90716'\r\nexport const BASE_API_URL = 'https://api.themoviedb.org'\r\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/'\r\nexport const BASE_BG_IMG_URL = 'https://image.tmdb.org/t/p/original'\r\n// export const INIT_BG_IMG = 'https://image.tmdb.org/t/p/original/rAiYTfKGqDCRIIqo664sY9XZIvQ.jpg' // interstellar\r\n\r\nexport const POSTER_W500 = `${BASE_IMG_URL}w500`\r\n// export const NOT_FOUND_POSTER_W500 = `${POSTER_W500}null`\r\n// export const NOT_FOUND_BG_IMG = `${BASE_IMG_URL}originalnull` \r\n\r\n\r\nexport const POPULAR_MOVIES_URL = `${BASE_API_URL}/3/movie/popular?${API_KEY}` \r\n\r\n\r\nexport const NUM_OF_DISP_SUGGESTIONS_PC = 5\r\nexport const NUM_OF_DISP_SUGGESTIONS_MOBILE = 3","export const getCurrentPageUrl = location => (\r\n  location.pathname.substring(0, location.pathname.lastIndexOf(\"/\") + 1)\r\n)\r\n\r\nexport const getMovieIdFromLocationPathname = location => (\r\n  location.pathname.substring(location.pathname.lastIndexOf(\"/\") + 1)\r\n)","import axios from 'axios'\r\nimport { API_KEY, BASE_API_URL, POSTER_W500 } from './Consts'\r\nimport { getMovieIdFromLocationPathname } from './RoutesFunctions'\r\n\r\n\r\n//==== Fetch all movies ====\r\nexport async function getMoviesDataToDisplayInSearch(input){\r\n  let allMoviesData\r\n  if (typeof input === 'string'){  // if url\r\n    allMoviesData = await getAllMoviesData(input)\r\n  } else if (typeof input === 'object'){\r\n    allMoviesData = input\r\n  } else {\r\n    console.error(`Passed ${typeof input} input to getMoviesDataToDisplayInSearch. You must pass string or object`)\r\n    return \r\n  }\r\n\r\n  return allMoviesData.map(movie => ({\r\n    title: movie.original_title,\r\n    id: movie.id,\r\n    poster: movie.poster_path !== null ? POSTER_W500 + movie.poster_path : null\r\n  }))\r\n}\r\n\r\nexport async function getAllMoviesData(url){\r\n  const response = await axios.get(url)\r\n  return response.data.results\r\n}\r\n\r\nexport function createSearchMoviesUrl(value){\r\n  return `${BASE_API_URL}/3/search/movie?query=%${value}&${API_KEY}`\r\n}\r\n\r\n//==== Fetch one movie ====\r\nexport async function getMovieData(movieID){\r\n  const response = await axios.get(`${BASE_API_URL}/3/movie/${movieID}?&${API_KEY}`)\r\n  return response.data\r\n}\r\n\r\nexport function setInitMovieID(location){\r\n  const initMovieID = getMovieIdFromLocationPathname(location)\r\n  if(initMovieID === '') return '157336' // interstellar\r\n  return initMovieID\r\n}","import { useEffect } from 'react'\r\n\r\nexport default function CalculateWindowHeightHook() {\r\n// calucluleta size of 1% of window height and saves it to variable\r\n// Proposal for new units to fix this \r\n// https://github.com/w3c/csswg-drafts/issues/4329\r\n// Solution from Jonas Sandstedt comment \r\n// https://chanind.github.io/javascript/2019/09/28/avoid-100vh-on-mobile-web.html\r\n\r\n  useEffect(() => {\r\n    function setDocHeight() {\r\n      document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`)\r\n    }\r\n    window.addEventListener('resize', setDocHeight())\r\n    window.addEventListener('orientationchange', setDocHeight())\r\n\r\n    return () => {\r\n      // functions to be called when unmounted. not shure if it does anything here\r\n      document.removeEventListener('resize', setDocHeight)\r\n      document.removeEventListener('orientationchange', setDocHeight)\r\n    }\r\n  }, [])\r\n  \r\n  return (\r\n    <></>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/BgGreen2.a17d9a1b.jpg\";","import { motion, AnimatePresence } from \"framer-motion\"\r\nimport 'styles/main.scss'\r\nimport BgGreen2 from 'images/BgGreen2.jpg'\r\n\r\n\r\nexport default function AppBackground(props) {\r\n  const { backgroundIMG } = props\r\n  return (\r\n    <>\r\n      <div className='BgGradient'/>\r\n      <AnimatePresence>\r\n        <motion.img \r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{duration: 1.5}}\r\n          \r\n          className='BgImage'\r\n          src={backgroundIMG ? backgroundIMG : BgGreen2}\r\n          key={backgroundIMG}\r\n        />\r\n      </AnimatePresence>\r\n    </>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/no_image.2f8a70e1.png\";","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport no_image from 'images/no_image.png'\r\n\r\n\r\nexport default function FullscreenSearch() {\r\n  const {searchbarText, suggestions, dispPostersNum } = useContext(AppContext)\r\n\r\n  return (\r\n    <div className='StartPageCards'>\r\n\r\n    <div className='Container'>\r\n      <p className='title'>\r\n        {!searchbarText && 'Trending Now'}\r\n      </p>\r\n      \r\n      <div className='row'>\r\n        {\r\n        suggestions.slice(0, dispPostersNum).map((item) => \r\n        <AnimatePresence exitBeforeEnter>\r\n          <motion.div \r\n            className='smallCard col-xl-2 col-md-3 col-4' \r\n            key={item.id}\r\n\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1}}\r\n            exit={{ opacity: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <Link to={`/movie/${item.id}`} className='linkStyle'>\r\n              <div>\r\n                <img \r\n                  loading='lazy'\r\n                  src={item.poster ? item.poster : no_image}\r\n                  alt={`poster ${item.id}`}\r\n                />\r\n                <p>{item.title}</p>\r\n              </div>\r\n            </Link>\r\n          </motion.div>\r\n          </AnimatePresence>\r\n        )}\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/close.17a94979.svg\";","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport closeImg  from 'images/close.svg'\r\nimport {DebounceInput} from 'react-debounce-input';\r\n\r\nexport default function Searchbar(props) {\r\n  const {searchbarText, setSearchbarText, setOldSearchbarText,  oldSearchbarText, onSearchbarTextChanging} = useContext(AppContext)\r\n\r\n  const {onClick, onKeyPress} = props\r\n\r\n  function resetSearch() {\r\n    setSearchbarText('')\r\n    setOldSearchbarText('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => e.preventDefault()}>\r\n      <DebounceInput\r\n        debounceTimeout={250}\r\n        onChange={onSearchbarTextChanging}\r\n        type='text'\r\n        placeholder='Search Movie'\r\n        value={searchbarText !== '' ? searchbarText : oldSearchbarText}\r\n        onKeyPress={onKeyPress}\r\n        onClick={onClick}\r\n      />\r\n      <img \r\n        src={closeImg} \r\n        onClick={resetSearch}\r\n        alt=\"close search\"\r\n      />\r\n    </form>\r\n  )\r\n}","import 'styles/main.scss'\r\nimport Searchbar from 'AppFiles/Movie/MovieSearchbar/Hooks/Searchbar'\r\n\r\nexport default function StartPageSearch() {\r\n  return (\r\n    <div className='col-lg-6 col-md-8 col-sm-9 col-12 startPageSearchbar'>\r\n      <Searchbar/>\r\n    </div>\r\n  )\r\n}","import StartPageCard from './StartPageCards'\r\nimport StartPageSearch from './StartPageSearchbar'\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport default function StartPage() {\r\n  return (\r\n    <motion.div \r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.7 }}\r\n    > \r\n      <StartPageSearch />\r\n      <StartPageCard />\r\n    </motion.div> \r\n  )\r\n}","import {createContext} from 'react'\r\n\r\nexport const MovieSearchbarContext = createContext(null)","import { useContext } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\n\r\n\r\nexport default function GotoOtherRoutesHooks() {\r\n  const { searchbarText, setSearchbarText, oldSearchbarText, pushToHistory, fetchPopularMoviesOnStartPage, setAllMoviesData} = useContext(AppContext)\r\n  const { setShowQuickSearchRes } = useContext(MovieSearchbarContext)\r\n\r\n  function selectedMovieInQuickSearch(id){\r\n    if (searchbarText && id !== undefined) {\r\n      pushToHistory(`/movie/${id}`)\r\n      setSearchbarText(oldSearchbarText)\r\n      setShowQuickSearchRes(false)\r\n    }\r\n  }\r\n\r\n  const gotoStarPage = () => {\r\n    setAllMoviesData([])\r\n    fetchPopularMoviesOnStartPage()\r\n    pushToHistory(`/`)\r\n  }\r\n\r\n  return {selectedMovieInQuickSearch, gotoStarPage}\r\n}","import { useContext, useEffect, useState, useRef } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { NUM_OF_DISP_SUGGESTIONS_PC } from 'utilities/Consts'\r\nimport HighlightTextInQuickSearchHooks from '../Hooks/HighlightTextInQuickSearchHooks'\r\nimport GotoOtherRoutesHooks from '../Hooks/GotoOtherRoutesHooks'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport no_image from 'images/no_image.png'\r\n\r\n\r\nexport default function MovieSearchbarResults() {\r\n  const { showQuickSearchRes, indexOfHighlightedMovie } = useContext(MovieSearchbarContext)\r\n  const { searchbarText, suggestions, pushToHistory } = useContext(AppContext)\r\n\r\n  const {highligthText, highlightMovieTextOnHover} = HighlightTextInQuickSearchHooks()\r\n  const {selectedMovieInQuickSearch} = GotoOtherRoutesHooks()\r\n\r\n  // sets initial height of posters container so buttonts don't drop on poster during transition\r\n  const [liHeight, setLiHeight] = useState()\r\n  const heightRef = useRef(null)\r\n  useEffect(() => {\r\n    if(heightRef.current){\r\n      setLiHeight(heightRef.current.offsetHeight)\r\n    }\r\n  })\r\n\r\n  return (\r\n  <div className='searchBarResPC'>\r\n    <ul \r\n      className={'searchbar_ul ' + \r\n      (showQuickSearchRes && searchbarText && 'fadeIn')} \r\n    >\r\n      {suggestions.length > 0 //if\r\n      ? //true,  have to return one big fragment <>\r\n      <>  \r\n        {suggestions.slice(0, NUM_OF_DISP_SUGGESTIONS_PC)\r\n        .map((item, index) => \r\n        <AnimatePresence exitBeforeEnter>\r\n          <motion.li \r\n            className={'searchbar_li ' + \r\n            (indexOfHighlightedMovie === index && 'active')}\r\n\r\n            onClick={()=> selectedMovieInQuickSearch(item.id)}\r\n            onMouseEnter={highlightMovieTextOnHover} \r\n            index={index}\r\n            key={item.id}\r\n\r\n            initial={{ opacity: 0, minHeight: liHeight }}\r\n            animate={{ opacity: 1, minHeight: liHeight }}\r\n            exit={{ opacity: 0, minHeight: liHeight }}\r\n            transition={{ duration: 0.3 }}\r\n            ref = { heightRef }\r\n          >\r\n            <div className='row'>\r\n              <img \r\n                src={item.poster ? item.poster : no_image} \r\n                className='col-lg-2 col-md-3 col-sm-4 col-3 quickSearchImage'\r\n                alt='movie poster'\r\n              />\r\n              <p className='col-lg-10 col-md-9 col-sm-8 col-9'>\r\n                {highligthText(item.title, searchbarText, index)}\r\n              </p>\r\n            </div>\r\n          </motion.li>\r\n          </AnimatePresence>\r\n        )}\r\n\r\n        {<li className={'searchbar_li showMore ' + \r\n          (indexOfHighlightedMovie === NUM_OF_DISP_SUGGESTIONS_PC && 'active')}\r\n\r\n          onMouseEnter={highlightMovieTextOnHover} \r\n          onClick={() => pushToHistory(`/`)} \r\n          index={NUM_OF_DISP_SUGGESTIONS_PC}\r\n        >\r\n          <p>show more</p>\r\n        </li>}\r\n      </>\r\n\r\n      : //else\r\n        searchbarText &&\r\n        <li className='searchbar_li showMore noResult'>no result</li>\r\n      }\r\n    </ul>\r\n  </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\n\r\n\r\nexport default function HighlightTextInQuickSearchHooks() {\r\n  const { indexOfHighlightedMovie, setIndexOfHighlightedMovie } = useContext(MovieSearchbarContext)\r\n\r\n  function highligthText(text, highlight, index) {\r\n    const parts = text.split(new RegExp(`(${highlight})`, 'gi'))\r\n\r\n    return <span> { parts.map((part, i) => \r\n      <span \r\n        key={i} \r\n        style=\r\n        {(part.toLowerCase() === highlight.toLowerCase() && indexOfHighlightedMovie !== index)\r\n          ? { color: '#00FC87', fontWeight: 'bold' } \r\n          : part.toLowerCase() === highlight.toLowerCase() \r\n            ? { fontWeight: 'bold'}\r\n            : {}} \r\n      >\r\n        { part }\r\n      </span>)\r\n    } </span>;\r\n  }\r\n\r\n  const highlightMovieTextOnHover = e => {\r\n    setIndexOfHighlightedMovie(parseInt(e.target.getAttribute('index')))\r\n  }\r\n\r\n  return {highligthText, highlightMovieTextOnHover}\r\n}","import { useContext, useState, useEffect, useRef } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { NUM_OF_DISP_SUGGESTIONS_MOBILE } from 'utilities/Consts'\r\nimport GotoOtherRoutesHooks from '../Hooks/GotoOtherRoutesHooks'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport no_image from 'images/no_image.png'\r\n\r\n\r\nexport default function MovieSearchbarResults() {\r\n  const { showQuickSearchRes, setShowQuickSearchRes} = useContext(MovieSearchbarContext)\r\n  const { searchbarText, suggestions, pushToHistory } = useContext(AppContext)\r\n  const {selectedMovieInQuickSearch} = GotoOtherRoutesHooks()\r\n\r\n  // sets initial height of posters container so buttonts don't drop on poster during transition\r\n  const [divHeight, setDivHeight] = useState()\r\n  const heightRef = useRef(null)\r\n  useEffect(() => {\r\n    if(heightRef.current){\r\n      setDivHeight(heightRef.current.offsetHeight)\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n  <div className='searchBarResMobile'>\r\n    <div\r\n      className={'searchbar_container ' + \r\n      (showQuickSearchRes && searchbarText && 'fadeIn')} \r\n    >\r\n      {suggestions.length > 0 //if\r\n      ? //true,  have to return one big fragment <>\r\n      <>  \r\n      <div className='searchbar_div' ref = { heightRef }>\r\n        {suggestions.slice(0, NUM_OF_DISP_SUGGESTIONS_MOBILE)\r\n        .map((item) => \r\n        <AnimatePresence exitBeforeEnter>\r\n        <motion.div \r\n          className='smallCard col-4' \r\n          key={item.id}\r\n          onClick={() => selectedMovieInQuickSearch(item.id)}\r\n\r\n          initial={{ opacity: 0, minHeight: divHeight}}\r\n          animate={{ opacity: 1, minHeight: divHeight}}\r\n          exit={{ opacity: 0, minHeight: divHeight }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <div>\r\n            <img \r\n              src={item.poster ? item.poster : no_image}\r\n              alt={`poster ${item.id}`}\r\n            />\r\n            <p>{item.title}</p>\r\n          </div>\r\n        </motion.div>\r\n        </AnimatePresence>\r\n        )}\r\n      </div>\r\n\r\n        {<div className='searchbar_li'>\r\n          <p \r\n            className='showMoreBtn'\r\n            onClick={() => pushToHistory(`/`)} \r\n            index={NUM_OF_DISP_SUGGESTIONS_MOBILE}\r\n          >\r\n            show more\r\n          </p>\r\n          <p \r\n            className='showMoreClose'\r\n            onClick={() => setShowQuickSearchRes(false)}\r\n          >\r\n            close\r\n          </p>\r\n        </div>}\r\n      </>\r\n\r\n      : //else\r\n        searchbarText &&\r\n        <li className=' noResult'>no result</li>\r\n      }\r\n    </div>\r\n  </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/tmdb.6852b1ef.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport 'styles/main.scss'\r\nimport { isMobile } from \"react-device-detect\"\r\nimport KeysPressedInSearchbarHooks from './Hooks/KeysPressedInSearchbarHooks'\r\nimport ShowHideQuickSearchHook from './Hooks/ShowHideQuickSearchHook'\r\nimport GotoOtherRoutesHooks from './Hooks/GotoOtherRoutesHooks'\r\nimport MovieSearchbarResultsPC from './Results/MovieSearchbarResultsPC'\r\nimport MovieSearchbarResultsMobile from './Results/MovieSearchbarResultsMobile'\r\nimport TMDBLogo from 'images/tmdb.svg'\r\nimport Searchbar from '../MovieSearchbar/Hooks/Searchbar'\r\n\r\nexport default function MovieSearch () {\r\n  const enterKeyInSearchbar = KeysPressedInSearchbarHooks()\r\n  const {node, OnSearchBarClicked} = ShowHideQuickSearchHook()\r\n  const {gotoStarPage} = GotoOtherRoutesHooks()\r\n\r\n\r\n  return (\r\n    <div className='movieSearchBar'>\r\n      <div className='row Container'>\r\n        <div className='col-xs-12 col-sm-3 col-lg-3 p-0'>\r\n          <img \r\n            src={TMDBLogo} \r\n            className='logo'\r\n            alt='The Movie Database Logo' \r\n            onClick={gotoStarPage}\r\n          />\r\n        </div>\r\n        \r\n        <div className='col-xs-12 col-sm-9 col-lg-9 p-0' ref={node}>\r\n          <Searchbar \r\n            onClick={OnSearchBarClicked} \r\n            onKeyPress={enterKeyInSearchbar}\r\n          />\r\n          {isMobile ? <MovieSearchbarResultsMobile/> : <MovieSearchbarResultsPC/>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport ArrowKeysReact from 'arrow-keys-react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport { NUM_OF_DISP_SUGGESTIONS_PC } from 'utilities/Consts'\r\nimport GotoOtherRoutesHooks from './GotoOtherRoutesHooks'\r\n\r\nexport default function KeysPressedInSearchbarHooks() {\r\n  const { suggestions, pushToHistory} = useContext(AppContext)\r\n  const { showQuickSearchRes, setShowQuickSearchRes, indexOfHighlightedMovie, setIndexOfHighlightedMovie } = useContext(MovieSearchbarContext)\r\n\r\n  const {selectedMovieInQuickSearch} = GotoOtherRoutesHooks()\r\n  \r\n  \r\n  function enterKeyInSearchbar(e){\r\n    const code = e.keyCode || e.which\r\n    if (code === 13 /* enter key */) {\r\n      if (!showQuickSearchRes) setShowQuickSearchRes(true)\r\n      if (showQuickSearchRes) {\r\n        if (indexOfHighlightedMovie === NUM_OF_DISP_SUGGESTIONS_PC) {\r\n          pushToHistory(`/`)\r\n        } else {\r\n          selectedMovieInQuickSearch(suggestions[indexOfHighlightedMovie].id)\r\n        }\r\n      } \r\n    }\r\n  }\r\n\r\n  // Up and down arrow keys configuration\r\n  // allows using up and down key to select movie in quick search\r\n  ArrowKeysReact.config({\r\n    up: () => {\r\n      isNaN(indexOfHighlightedMovie)\r\n        ? setIndexOfHighlightedMovie(NUM_OF_DISP_SUGGESTIONS_PC)\r\n        : indexOfHighlightedMovie < 0\r\n          ? setIndexOfHighlightedMovie(NUM_OF_DISP_SUGGESTIONS_PC)\r\n          : setIndexOfHighlightedMovie(prevState => prevState - 1)\r\n    },\r\n    down: () => {\r\n      isNaN(indexOfHighlightedMovie)\r\n        ? setIndexOfHighlightedMovie(0)\r\n        : indexOfHighlightedMovie > NUM_OF_DISP_SUGGESTIONS_PC\r\n          ? setIndexOfHighlightedMovie(0)\r\n          : setIndexOfHighlightedMovie(prevState => prevState + 1)\r\n    }\r\n  })\r\n\r\n\r\n  return enterKeyInSearchbar\r\n}","import { useEffect, useContext, useRef } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\n\r\nexport default function ShowHideQuickSearchHook() {\r\n  const { searchbarText, setSearchbarText, oldSearchbarText, setOldSearchbarText, showResInSearchBar } = useContext(AppContext)\r\n  const { setShowQuickSearchRes } = useContext(MovieSearchbarContext)\r\n  const node = useRef()\r\n\r\n  function hideOnOutsideClick(e) {\r\n    if (!node.current.contains(e.target)){\r\n      setShowQuickSearchRes(false) \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', hideOnOutsideClick)\r\n    return () => {\r\n      // cleanup function - called when unmounted\r\n      document.removeEventListener('mousedown', hideOnOutsideClick)\r\n    }\r\n  }, [])\r\n\r\n  const OnSearchBarClicked = async e => {\r\n    setShowQuickSearchRes(true)\r\n    if (searchbarText === '') {\r\n      showResInSearchBar(oldSearchbarText)\r\n      setSearchbarText(oldSearchbarText)\r\n      setOldSearchbarText('')\r\n    }\r\n  }\r\n\r\n  return {node, OnSearchBarClicked}\r\n}","export function nestedDataToString(nestedData) {\r\n  let nestedArray = []\r\n  if (nestedData !== undefined) {\r\n    nestedData.forEach(item => {\r\n      nestedArray.push(item.name)\r\n    })\r\n  }\r\n  // returns string compiled from array\r\n  return nestedArray.join(', ') \r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { POSTER_W500 } from 'utilities/Consts'\r\nimport { nestedDataToString } from './MovieCardFunctions'\r\nimport no_image from 'images/no_image.png'\r\n\r\nexport default function MovieInfo () {\r\n  const { movieData } = useContext(AppContext)\r\n  const { original_title, overview, tagline, poster_path, production_companies, genres, release_date, runtime } = movieData\r\n  let { revenue, vote_average } = movieData\r\n\r\n  const productionList = nestedDataToString(production_companies),\r\n        genresList = nestedDataToString(genres)\r\n\r\n\r\n  return (\r\n    <div className='movieCard'>\r\n      <AnimatePresence exitBeforeEnter>\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{ duration: 1 }}\r\n          className='Container row'\r\n          key={original_title}\r\n        >\r\n          <div className='metaDataContainer col-12 col-md-7 col-lg-8'>\r\n            <h1>{original_title}</h1>\r\n            <span className='tagline'>{tagline}</span>\r\n            <p>{overview}</p>\r\n            <div className='additionalDetails'>\r\n              <span className='genreList'>{genresList}</span>\r\n              <span className='productionList'>{productionList}</span>\r\n              <div className='row releaseDetails'>\r\n\r\n                <div className='col-6'>\r\n                  Original Release:\r\n                  <span className='metaData'>{release_date}</span>\r\n                </div>\r\n                <div className='col-6'>\r\n                  Running Time: \r\n                  <span className='metaData'>\r\n                    {runtime} min\r\n                  </span>\r\n                </div>\r\n                <div className='col-6'>\r\n                  Box Office: \r\n                  <span className='metaData'>\r\n                    {revenue ? `${parseInt(revenue).toLocaleString()} $` : '-'}\r\n                  </span>\r\n                </div>\r\n                <div className='col-6'>\r\n                  Vote Average:\r\n                  <span className='metaData'>\r\n                    {vote_average ? vote_average : '-'}\r\n                  </span>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div \r\n          className='posterContainer order-md-first col-12 col-md-5 col-lg-4'>\r\n            <img\r\n              className='poster'\r\n              src={poster_path !== null \r\n                ? POSTER_W500 + poster_path \r\n                : no_image}\r\n              alt='poster'\r\n            />\r\n          </div>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { motion } from \"framer-motion\"\r\nimport { MovieSearchbarContext } from 'AppFiles/Contexts/MovieSearchbarContext'\r\nimport MovieSearch from './MovieSearchbar/MovieSearchbar'\r\nimport MovieCard from './MovieCard/MovieCard'\r\n\r\n\r\nexport default function Movie() {\r\n  const [showQuickSearchRes, setShowQuickSearchRes] = useState(false)\r\n  const [indexOfHighlightedMovie, setIndexOfHighlightedMovie] = useState()\r\n\r\n  return (\r\n    <MovieSearchbarContext.Provider value={{ showQuickSearchRes, setShowQuickSearchRes, indexOfHighlightedMovie, setIndexOfHighlightedMovie}}>\r\n      <motion.div \r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1}}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: 0.7 }}\r\n      >    \r\n        <MovieSearch /> \r\n        <MovieCard />\r\n      </motion.div>\r\n    </MovieSearchbarContext.Provider>\r\n  )\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect } from 'react'\r\nimport 'styles/main.scss'\r\nimport { Route, Switch, useLocation, useHistory } from 'react-router-dom'\r\nimport { AnimatePresence } from \"framer-motion\"\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport AppScroolbar from 'utilities/Scroolbar/AppScrollbar'\r\nimport { getMoviesDataToDisplayInSearch, getAllMoviesData, getMovieData, createSearchMoviesUrl, setInitMovieID } from 'utilities/FetchFunctions'\r\nimport { POPULAR_MOVIES_URL, BASE_BG_IMG_URL } from 'utilities/Consts'\r\nimport { getCurrentPageUrl, getMovieIdFromLocationPathname } from 'utilities/RoutesFunctions'\r\nimport CalculateWindowHeightHook from 'utilities/CalculateWindowHeightHook'\r\nimport ArrowKeysReact from 'arrow-keys-react'\r\nimport AppBackground from 'AppFiles/AppBackground'\r\nimport StartPage from 'AppFiles/StartPage/StartPage'\r\nimport MoviePage from 'AppFiles/Movie/MoviePage'\r\nimport { isMobile } from \"react-device-detect\"\r\n\r\nexport default function App () {\r\n  const location = useLocation()  // key to app routes\r\n  const history = useHistory()\r\n  const pushToHistory = url => history.push(url)\r\n\r\n\r\n// ==== Fetch StartPage ====\r\n  const [backgroundIMG, setBackgroundIMG] = useState()\r\n  const [suggestions, setSuggestions] = useState([])\r\n  const [searchbarText, setSearchbarText] = useState('')\r\n\r\n  async function fetchPopularMoviesOnStartPage() {\r\n    setSuggestions(await getMoviesDataToDisplayInSearch(POPULAR_MOVIES_URL))\r\n  }\r\n\r\n  // if search is empty on main page it displays popular movies\r\n  // loads at page starup because searchbarText === '' at start\r\n  // checks this condition every time\r\n  useEffect(() => {\r\n    if(searchbarText === '' && location.pathname ==='/') fetchPopularMoviesOnStartPage()\r\n    else if(searchbarText === '') {\r\n      setTimeout(() => {\r\n        setSuggestions([])\r\n      }, 600) // debounc time + animation time\r\n    }\r\n  }, [searchbarText])\r\n// ==== END Fetch StartPage ====\r\n\r\n\r\n// ==== Fetch movie page based on movieID parameter ====\r\n  const [movieID, setMovieID] = useState(() => setInitMovieID(location))\r\n  const [movieData, setMovieData] = useState({})\r\n  \r\n  useEffect(async () => {\r\n    movieID && setMovieData(await getMovieData(movieID))\r\n    console.log(movieID)\r\n  }, [movieID])\r\n\r\n  // implements back button in browser\r\n  // allows to go back to previous movie on moviePage\r\n  useEffect(() => {\r\n    setMovieID(getMovieIdFromLocationPathname(location))\r\n  }, [location.pathname])\r\n  \r\n// ==== END Fetch movie page ====\r\n\r\n\r\n\r\n// ==== Search state and functions ====\r\n  const [allMoviesData, setAllMoviesData] = useState([])\r\n  const [oldSearchbarText, setOldSearchbarText] = useState('')\r\n\r\n\r\n  const onSearchbarTextChanging = e => {\r\n    const value = e.target.value.replace(/[^\\w\\s]/gi, '')\r\n    setSearchbarText(value)\r\n    showResInSearchBar(value)\r\n  }\r\n\r\n  const showResInSearchBar = async (value) => {\r\n    if (value.length === 0) setOldSearchbarText('')\r\n    if (value.length >= 1) {\r\n      const allMoviesData = await getAllMoviesData(createSearchMoviesUrl(value))\r\n      const dataToDisplay = await getMoviesDataToDisplayInSearch(allMoviesData)\r\n\r\n      setAllMoviesData(allMoviesData)\r\n      setSuggestions(dataToDisplay)\r\n      setOldSearchbarText(value)\r\n    }\r\n  }\r\n\r\n\r\n  const [dispPostersNum, setDispPostersNum] = useState(isMobile ? 9 : 12)\r\n  \r\n  const infiniteScroll = e => {\r\n    console.log('helo')\r\n    // setDispPostersNum(20)\r\n  }\r\n\r\n  \r\n// ==== END Search state and functions ====\r\n\r\n\r\n// ==== Console log stuff ====\r\n  // useEffect(() => {\r\n  //   console.log(`allMoviesData.length ${allMoviesData.length}`)\r\n  //   console.log(`suggestions.length ${allMoviesData.length}`)\r\n  // }, [allMoviesData])\r\n\r\n  useEffect(() => {\r\n    console.log({suggestions})\r\n  }, [suggestions])\r\n\r\n  useEffect(() => {\r\n    console.log({movieData})\r\n    setBackgroundIMG(movieData.backdrop_path && `${BASE_BG_IMG_URL}${movieData.backdrop_path}`)\r\n  }, [movieData])\r\n\r\n  useEffect(() => {\r\n    console.log(`searchbarText: ${searchbarText}`)\r\n  }, [searchbarText])\r\n\r\n  useEffect(() => {\r\n    console.log(`backgroundIMG: ${backgroundIMG}`)\r\n  }, [backgroundIMG])\r\n\r\n// ==== END Console log stuff ====\r\n\r\n\r\n  return (\r\n    <div>\r\n      <CalculateWindowHeightHook/>\r\n      <AppBackground backgroundIMG={backgroundIMG}/>\r\n\r\n      <div\r\n        id='app'\r\n        {...ArrowKeysReact.events}\r\n        tabIndex='1'\r\n      >\r\n        <AppContext.Provider \r\n          value={{movieID, movieData, searchbarText, setSearchbarText, oldSearchbarText, setOldSearchbarText, suggestions, setSuggestions,  onSearchbarTextChanging, allMoviesData, setAllMoviesData, setMovieID, fetchPopularMoviesOnStartPage, showResInSearchBar, history, pushToHistory, dispPostersNum, setDispPostersNum, infiniteScroll}}\r\n        >\r\n          <AppScroolbar>\r\n            <AnimatePresence exitBeforeEnter>\r\n              <Switch \r\n                location={location} \r\n                key={getCurrentPageUrl(location)}\r\n              >\r\n                <Route exact path='/' render={() => <StartPage/>} />\r\n                <Route exact path={`/movie/:${movieID}`} render={() => <MoviePage/>} />\r\n              </Switch>\r\n            </AnimatePresence>\r\n          </AppScroolbar>\r\n        </AppContext.Provider>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport App from 'App'\r\nimport * as serviceWorker from 'testingFiles/serviceWorker'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}