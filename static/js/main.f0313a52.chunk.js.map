{"version":3,"sources":["AppFiles/Contexts/AppContext.js","ReusableComponents/Scroolbar/AppScrollbar.js","Utils/Consts.js","Utils/RoutesFunctions.js","Utils/FetchFunctions.js","ReusableComponents/AppBackground/AppBackground.js","Images/no_image.png","ReusableComponents/PosterCard/PosterCard.js","AppFiles/StartPage/StartPage.js","AppFiles/Movie/MoviePageFunctions.js","AppFiles/Movie/MoviePage.js","Images/BgGreen.jpg","Images/menu.svg","Images/close.svg","ReusableComponents/Searchbar/Searchbar.js","Hooks/SearchbarHooks/useGotoOtherRoutes.js","ReusableComponents/NoResult/NoResult.js","Hooks/SearchbarHooks/useCreateArrayToDisplayAndFadeout.js","AppFiles/Navbar/Searchbar/Results/ResultsMobile.js","Hooks/SearchbarHooks/useHighlightTextInQuickSearch.js","ReusableComponents/PosterLi/PosterLi.js","AppFiles/Navbar/Searchbar/Results/ResultsPC.js","Hooks/SearchbarHooks/useSearchbarResultsTransition.js","AppFiles/Navbar/Searchbar/Results/SearchbarResults.js","Hooks/SearchbarHooks/useDelayShowNoResults.js","AppFiles/Navbar/Searchbar/NavSearchbar.js","Hooks/SearchbarHooks/useKeysPressedInSearchbar.js","Hooks/SearchbarHooks/useShowHideQuickSearch.js","AppFiles/Navbar/Topbar/Topbar.js","AppFiles/Navbar/Sidebar/Sidebar.js","AppFiles/Navbar/Navbar.js","AppFiles/Forms/FormikControl/Templates/ErrorMsg/ErrorMsg.js","AppFiles/Forms/FormikControl/Templates/Input.js","AppFiles/Forms/FormikControl/Templates/Select.js","AppFiles/Forms/FormikControl/Templates/Textarea.js","AppFiles/Forms/FormikControl/Templates/RadioButtons.js","AppFiles/Forms/FormikControl/Templates/CheckboxGroup.js","AppFiles/Forms/FormikControl/FormikControl.js","AppFiles/Forms/Register/Register.js","AppFiles/Forms/Login/Login.js","App.js","testingFiles/serviceWorker.js","index.js"],"names":["AppContext","createContext","AppScrollbar","props","useContext","infiniteScroll","scrollBarRef","dispPostersNum","className","onScrollDown","e","undefined","ref","children","API_KEY","BASE_API_URL","POSTER_W500","POPULAR_MOVIES_URL","PAGE_TRANSITION_TIME","QUICK_SEARCH_TRANSITION","getCurrentPageUrl","location","pathname","substring","lastIndexOf","getMovieIdFromLocationPathname","getMoviesDataToDisplayInSearch","input","a","getAllMoviesData","allMoviesData","console","error","map","movie","title","original_title","id","poster","poster_path","url","axios","get","response","data","results","createSearchMoviesUrl","value","getMovieData","movieID","AppBackground","fetchImg","fallbackImg","useEffect","setDocHeight","document","documentElement","style","setProperty","window","innerHeight","addEventListener","removeEventListener","AnimatePresence","motion","img","src","initial","opacity","animate","delay","exit","transition","duration","PosterCard","cardData","onClick","cardTransitionDuration","imgTransition","imgHeight","imgWidth","exitBeforeEnter","div","ease","width","height","opacityTransition","no_image","alt","StartPageCards","searchbarText","suggestions","pushToHistory","setSuggestions","selectedMovieInCardsPage","setTimeout","current","_ps","element","scrollTop","p","slice","item","nestedDataToString","nestedData","nestedArray","forEach","push","name","join","MovieCard","movieData","overview","tagline","production_companies","genres","release_date","runtime","revenue","vote_average","productionList","genresList","parseInt","toLocaleString","Searchbar","setSearchbarText","setOldSearchbarText","oldSearchbarText","onSearchbarTextChanging","onKeyPress","onSubmit","preventDefault","debounceTimeout","onChange","type","placeholder","closeImg","GotoOtherRoutesHooks","fetchPopularMoviesOnStartPage","setAllMoviesData","setShowQuickSearchRes","selectedMovieInQuickSearch","gotoStarPage","NoResult","fadeInConditionsArr","onClose","closeBtn","useState","fadeIn","setFadeIn","every","useCreateArrayToDisplayAndFadeout","array","sliceNum","length","disappearDelay","clonedArray","setClonedArray","slicedArray","timer","clearTimeout","ResultsMobile","showQuickSearchRes","displayedSuggestions","index","HighlightTextInQuickSearchHooks","indexOfHighlightedMovie","setIndexOfHighlightedMovie","highligthText","text","highlight","parts","split","RegExp","part","i","toLowerCase","color","fontWeight","highlightMovieTextOnHover","target","getAttribute","PosterLi","li","onMouseEnter","ResultsPC","useHighlightTextInQuickSearch","UseSearchbarResultsTransition","Component","MovieSearchbarResults","showNoResults","msDelay","stringDependency","setShowNoResults","useDelayShowNoResults","useSearchbarResultsTransition","isMobile","NavSearchbar","enterKeyInSearchbar","ArrowKeysReact","config","up","isNaN","prevState","down","keyCode","which","useKeysPressedInSearchbar","showResInSearchBar","node","useRef","hideOnOutsideClick","contains","OnSearchBarClicked","useShowHideQuickSearch","includes","Topbar","openSidebar","gotoHome","gotoRegister","gotoLogin","menuIcon","Sidebar","isOpen","close","closeIcon","Navbar","isSidebarOpen","setIsSidebarOpen","ErrorMsg","Input","label","rest","htmlFor","component","Select","options","as","option","key","Textarea","RadioButtons","field","checked","CheckboxGroup","FormikControl","control","Register","validationSchema","Yup","email","required","password","initialValues","values","onSubmitProps","log","setSubmitting","enableReinitialize","formik","disabled","isValid","isSubmitting","Login","App","useLocation","history","useHistory","backgroundIMG","setBackgroundIMG","initMovieID","setInitMovieID","setMovieID","setMovieData","setDispPostersNum","dataToDisplay","backdrop_path","BgGreen","events","tabIndex","Provider","replace","exact","path","render","Boolean","hostname","match","ReactDOM","basename","process","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f0313a52.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nexport const AppContext = createContext(null)","import { useContext} from 'react'\r\nimport ScrollBar from 'react-perfect-scrollbar'\r\n// import { isMobile } from \"react-device-detect\"\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport './ScroolbarStyle.scss'\r\n\r\nexport default function AppScrollbar (props) {\r\n  // displays perfect scrollbar if not on mobile because I couldn't add refresh gesture on mobile\r\n  // https://github.com/goldenyz/react-perfect-scrollbar/issues/101\r\n\r\n  const { infiniteScroll, scrollBarRef, dispPostersNum } = useContext(AppContext)\r\n  return (\r\n    // isMobile ? (\r\n    //   <div className=\"overflow-y-auto\">\r\n    //     {props.children}\r\n    //   </div>\r\n    // ) : (\r\n      <ScrollBar \r\n        className='AppScroolbar' \r\n        // adds and clears on scroll event\r\n        onScrollDown={ dispPostersNum < 20 ? (e) => infiniteScroll(e) : undefined}  \r\n        // onYReachEnd={e => infiniteScroll(e)}\r\n        ref = { scrollBarRef }\r\n      >\r\n        {props.children}\r\n      </ScrollBar>\r\n  // )\r\n  )\r\n}","export const API_KEY = 'api_key=cfe422613b250f702980a3bbf9e90716'\r\nexport const BASE_API_URL = 'https://api.themoviedb.org'\r\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/'\r\nexport const BASE_BG_IMG_URL = 'https://image.tmdb.org/t/p/original'\r\n// export const INIT_BG_IMG = 'https://image.tmdb.org/t/p/original/rAiYTfKGqDCRIIqo664sY9XZIvQ.jpg' // interstellar\r\n\r\nexport const POSTER_W500 = `${BASE_IMG_URL}w500`\r\n// export const NOT_FOUND_POSTER_W500 = `${POSTER_W500}null`\r\n// export const NOT_FOUND_BG_IMG = `${BASE_IMG_URL}originalnull` \r\n\r\n\r\nexport const POPULAR_MOVIES_URL = `${BASE_API_URL}/3/movie/popular?${API_KEY}` \r\n\r\n\r\nexport const NUM_OF_DISP_RES_PC = 5\r\nexport const NUM_OF_DISP_RES_MOBILE = 3\r\nexport const PAGE_TRANSITION_TIME = 0.7\r\nexport const START_PAGE_CARDS_TRANSITION = 0.35\r\nexport const QUICK_SEARCH_TRANSITION = 0.35","export const getCurrentPageUrl = location => (\r\n  location.pathname.substring(0, location.pathname.lastIndexOf(\"/\") + 1)\r\n)\r\n\r\nexport const getMovieIdFromLocationPathname = location => (\r\n  location.pathname.substring(location.pathname.lastIndexOf(\"/\") + 1)\r\n)","import axios from 'axios'\r\nimport { API_KEY, BASE_API_URL, POSTER_W500 } from './Consts'\r\nimport { getMovieIdFromLocationPathname } from './RoutesFunctions'\r\n\r\n\r\n//==== Fetch all movies ====\r\nexport async function getMoviesDataToDisplayInSearch(input){\r\n  let allMoviesData\r\n  if (typeof input === 'string'){  // if url\r\n    allMoviesData = await getAllMoviesData(input)\r\n  } else if (typeof input === 'object'){\r\n    allMoviesData = input\r\n  } else {\r\n    console.error(`Passed ${typeof input} input to getMoviesDataToDisplayInSearch. You must pass string or object`)\r\n    return \r\n  }\r\n\r\n  return allMoviesData.map(movie => ({\r\n    title: movie.original_title,\r\n    id: movie.id,\r\n    poster: movie.poster_path !== null ? POSTER_W500 + movie.poster_path : null\r\n  }))\r\n}\r\n\r\nexport async function getAllMoviesData(url){\r\n  const response = await axios.get(url)\r\n  return response.data.results\r\n}\r\n\r\nexport function createSearchMoviesUrl(value){\r\n  return `${BASE_API_URL}/3/search/movie?query=%${value}&${API_KEY}`\r\n}\r\n\r\n//==== Fetch one movie ====\r\nexport async function getMovieData(movieID){\r\n  const response = await axios.get(`${BASE_API_URL}/3/movie/${movieID}?&${API_KEY}`)\r\n  return response.data\r\n}\r\n\r\nexport function setInitMovieID(location){\r\n  const initMovieID = getMovieIdFromLocationPathname(location)\r\n  if(initMovieID === '') return '157336' // interstellar\r\n  return initMovieID\r\n}","import { useEffect } from 'react'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport PropTypes from 'prop-types'\r\nimport './AppBackground.scss'\r\n\r\n\r\nAppBackground.propTypes = {\r\n  fetchImg: PropTypes.string, \r\n  fallbackImg: PropTypes.string\r\n}\r\n\r\nexport default function AppBackground({fetchImg, fallbackImg}) {\r\n// calucluleta size of 1% of window height and saves it to variable\r\n// Proposal for new units to fix this \r\n// https://github.com/w3c/csswg-drafts/issues/4329\r\n// Solution from Jonas Sandstedt comment \r\n// https://chanind.github.io/javascript/2019/09/28/avoid-100vh-on-mobile-web.html\r\n\r\n\r\n  useEffect(() => {\r\n    function setDocHeight() {\r\n      document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`)\r\n    }\r\n    window.addEventListener('resize', setDocHeight())\r\n    window.addEventListener('orientationchange', setDocHeight())\r\n\r\n    return () => {\r\n      // functions to be called when unmounted. not shure if it does anything here\r\n      document.removeEventListener('resize', setDocHeight)\r\n      document.removeEventListener('orientationchange', setDocHeight)\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='BgGradient'/>\r\n      <AnimatePresence>\r\n        <motion.img \r\n          className='BgImage'\r\n          src={fetchImg ? fetchImg : fallbackImg}\r\n          key={fetchImg}\r\n\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1, delay :0.2 }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{duration: 1.5}}\r\n        />\r\n      </AnimatePresence>\r\n    </>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/no_image.2f8a70e1.png\";","import { motion, AnimatePresence } from \"framer-motion\"\r\nimport ImageFadeIn from \"react-image-fade-in\";\r\nimport no_image from 'Images/no_image.png'\r\nimport PropTypes from 'prop-types'\r\n\r\nPosterCard.propTypes = {\r\n  cardData: PropTypes.object, \r\n  onClick: PropTypes.func, \r\n  className: PropTypes.string, \r\n  cardTransitionDuration: PropTypes.number, \r\n  imgTransition: PropTypes.number, \r\n  imgHeight: PropTypes.string, \r\n  imgWidth: PropTypes.string\r\n}\r\n\r\nexport default function PosterCard ({\r\n  cardData, onClick, className, cardTransitionDuration, imgTransition, imgHeight, imgWidth}) {\r\n \r\n  return (\r\n  <AnimatePresence exitBeforeEnter>\r\n    <motion.div\r\n      className={`PosterCard ${className}`}\r\n      onClick={() => onClick(cardData.id)}\r\n\r\n      key={cardData.id}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: cardTransitionDuration, ease: 'easeInOut' }}\r\n    >\r\n      <div >\r\n          <ImageFadeIn\r\n            width={imgWidth}\r\n            height={imgHeight}\r\n            opacityTransition={imgTransition}\r\n            src={cardData.poster ? cardData.poster : no_image}\r\n            alt={`poster ${cardData.id}`}\r\n          />\r\n        <p>{cardData.title}</p>\r\n      </div>\r\n    </motion.div>\r\n  </AnimatePresence>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { PAGE_TRANSITION_TIME, START_PAGE_CARDS_TRANSITION } from 'Utils/Consts'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport PosterCard from 'ReusableComponents/PosterCard/PosterCard'\r\n\r\n\r\nexport default function StartPageCards() {\r\n  const {searchbarText, suggestions, dispPostersNum,pushToHistory, scrollBarRef, setSuggestions} = useContext(AppContext)\r\n\r\n  function selectedMovieInCardsPage(id){\r\n    pushToHistory(`/movie/${id}`)\r\n    setTimeout(() => {\r\n      // moves ScrollBar to top\r\n      scrollBarRef.current._ps.element.scrollTop = 0  \r\n      // console.log(\" scrollBarRef\", scrollBarRef.current._ps)\r\n      \r\n      setSuggestions([])\r\n    }, PAGE_TRANSITION_TIME * 1000) // exit animation length\r\n  }\r\n\r\n\r\n  return (\r\n    <motion.div \r\n      className='StartPageCards'\r\n\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1, delay :0.2 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: PAGE_TRANSITION_TIME }}\r\n    > \r\n      <div className='Container'>\r\n      <AnimatePresence exitBeforeEnter>\r\n        <motion.p\r\n          key={searchbarText}\r\n          className='title'\r\n          \r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1}}\r\n          exit={{ opacity: 0 }}\r\n          transition={{ duration: START_PAGE_CARDS_TRANSITION, ease: \"easeInOut\"}}>\r\n            {!searchbarText && 'Trending Now'}\r\n        </motion.p>\r\n      </AnimatePresence>\r\n\r\n\r\n      <div className='row'>\r\n        {suggestions.slice(0, dispPostersNum).map(item => \r\n          <PosterCard \r\n            className='col-xl-2 col-md-3 col-4'\r\n            cardData={item} \r\n            onClick={selectedMovieInCardsPage}\r\n            cardTransitionDuration={START_PAGE_CARDS_TRANSITION}\r\n            imgTransition={0.5}\r\n            imgHeight={'750'}\r\n            imgWidth={'500'}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  </motion.div> \r\n  )\r\n}","export function nestedDataToString(nestedData) {\r\n  let nestedArray = []\r\n  if (nestedData !== undefined) {\r\n    nestedData.forEach(item => {\r\n      nestedArray.push(item.name)\r\n    })\r\n  }\r\n  // returns string compiled from array\r\n  return nestedArray.join(', ') \r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { POSTER_W500 } from 'Utils/Consts'\r\nimport { nestedDataToString } from './MoviePageFunctions'\r\nimport { PAGE_TRANSITION_TIME } from 'Utils/Consts'\r\nimport no_image from 'Images/no_image.png'\r\n\r\nexport default function MovieCard () {\r\n  const { movieData } = useContext(AppContext)\r\n  const { original_title, overview, tagline, poster_path, production_companies, genres, release_date, runtime } = movieData\r\n  let { revenue, vote_average } = movieData\r\n\r\n  const productionList = nestedDataToString(production_companies),\r\n        genresList = nestedDataToString(genres)\r\n\r\n\r\n  return (\r\n    /* Transition between this and other pages */\r\n    <motion.div \r\n      className='MovieCard'\r\n\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1, delay :0.2}}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: PAGE_TRANSITION_TIME }}\r\n    >   \r\n      {/* Transition between cards when we pick another movie on this page */}\r\n      <AnimatePresence exitBeforeEnter> \r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{ duration: PAGE_TRANSITION_TIME }}\r\n          className='Container row'\r\n          key={original_title}\r\n        >\r\n          <div className='metaDataContainer col-12 col-md-7 col-lg-8'>\r\n            <h1>{original_title}</h1>\r\n            <span className='tagline'>{tagline}</span>\r\n            <p>{overview}</p>\r\n            <div className='additionalDetails'>\r\n              <span className='genreList'>{genresList}</span>\r\n              <span className='productionList'>{productionList}</span>\r\n              <div className='row releaseDetails'>\r\n\r\n                <div className='col-6'>\r\n                  Original Release:\r\n                  <span className='metaData'>{release_date}</span>\r\n                </div>\r\n                <div className='col-6'>\r\n                  Running Time: \r\n                  <span className='metaData'>\r\n                    {runtime} min\r\n                  </span>\r\n                </div>\r\n                <div className='col-6'>\r\n                  Box Office: \r\n                  <span className='metaData'>\r\n                    {revenue ? `${parseInt(revenue).toLocaleString()} $` : '-'}\r\n                  </span>\r\n                </div>\r\n                <div className='col-6'>\r\n                  Vote Average:\r\n                  <span className='metaData'>\r\n                    {vote_average ? vote_average : '-'}\r\n                  </span>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div \r\n          className='posterContainer order-md-first col-12 col-md-5 col-lg-4'>\r\n            <img\r\n              className='poster'\r\n              src={poster_path !== null \r\n                ? POSTER_W500 + poster_path \r\n                : no_image}\r\n              alt='poster'\r\n            />\r\n          </div>\r\n        </motion.div>\r\n      </AnimatePresence>\r\n    </motion.div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/BgGreen.a17d9a1b.jpg\";","export default __webpack_public_path__ + \"static/media/menu.de21b81a.svg\";","export default __webpack_public_path__ + \"static/media/close.17a94979.svg\";","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport closeImg  from 'Images/close.svg'\r\nimport {DebounceInput} from 'react-debounce-input';\r\n\r\nexport default function Searchbar(props) {\r\n  const {searchbarText, setSearchbarText, setOldSearchbarText,  oldSearchbarText, onSearchbarTextChanging} = useContext(AppContext)\r\n\r\n  const {onClick, onKeyPress} = props\r\n\r\n  function resetSearch() {\r\n    setSearchbarText('')\r\n    setOldSearchbarText('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => e.preventDefault()}>\r\n      <DebounceInput\r\n        debounceTimeout={250}\r\n        onChange={onSearchbarTextChanging}\r\n        type='text'\r\n        placeholder='Search Movie'\r\n        value={searchbarText !== '' ? searchbarText : oldSearchbarText}\r\n        onKeyPress={onKeyPress}\r\n        onClick={onClick}\r\n      />\r\n      <img \r\n        src={closeImg} \r\n        onClick={resetSearch}\r\n        alt=\"close search\"\r\n      />\r\n    </form>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\n\r\n\r\nexport default function GotoOtherRoutesHooks() {\r\n  const { searchbarText, setSearchbarText, oldSearchbarText, pushToHistory, fetchPopularMoviesOnStartPage, setAllMoviesData, setShowQuickSearchRes} = useContext(AppContext)\r\n\r\n  function selectedMovieInQuickSearch(id){\r\n    if (searchbarText && id !== undefined) {\r\n      pushToHistory(`/movie/${id}`)\r\n      setSearchbarText(oldSearchbarText)\r\n      setShowQuickSearchRes(false)\r\n    }\r\n  }\r\n\r\n  const gotoStarPage = () => {\r\n    setAllMoviesData([])\r\n    fetchPopularMoviesOnStartPage()\r\n    pushToHistory(`/`)\r\n  }\r\n\r\n  return {selectedMovieInQuickSearch, gotoStarPage}\r\n}","import {useState, useEffect} from 'react'\r\nimport 'styles/main.scss'\r\nimport PropTypes from 'prop-types'\r\nimport closeImg  from 'Images/close.svg'\r\n\r\n\r\nNoResult.propTypes = {\r\n  className: PropTypes.string,\r\n  fadeInConditionsArr: PropTypes.array.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  closeBtn: PropTypes.string.isRequired\r\n}\r\n\r\nexport default function NoResult({className, fadeInConditionsArr, onClose, closeBtn}) {\r\n  const [fadeIn, setFadeIn] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // if every element in array is true\r\n    setFadeIn(fadeInConditionsArr.every(item => item))\r\n  }, [fadeInConditionsArr])\r\n\r\n  return (\r\n    <div className={`NoResult ${className} ` + (fadeIn && 'fadeIn')}>\r\n        <p>no result</p>\r\n\r\n        {closeBtn === 'btn' &&\r\n          <p \r\n            className='btn'\r\n            onClick={() => onClose(false)}\r\n          >close</p>\r\n        }\r\n\r\n        {closeBtn === 'img' &&\r\n          <img \r\n            className='closeImg'\r\n            src={closeImg} \r\n            onClick={() => onClose(false)}\r\n            alt=\"close search results\"\r\n          />\r\n        }\r\n    </div>\r\n  )\r\n}","import { useState, useEffect } from 'react'\r\n\r\nexport default function useCreateArrayToDisplayAndFadeout(array, sliceNum = array.length, disappearDelay = 800) {\r\n  // == Usage ==\r\n  // 1. Delays disapperance of displayed data from fetched array\r\n  // 2. Can give your app time to fadeout current displayed data\r\n\r\n  // == How it works ==\r\n  // creates clone of passed array.\r\n  // cloned array is updated instantly when passed not empty array\r\n  // cloned array is not updated for \"disappearDelay\" miliseconds when passed empty array. \r\n\r\n  const [clonedArray, setClonedArray] = useState([])\r\n\r\n  useEffect(() => {\r\n    const slicedArray = array\r\n    .slice(0, sliceNum)\r\n\r\n    if(array.length > 0){\r\n      setClonedArray(slicedArray)\r\n    } else {\r\n      const timer = setTimeout(() => {\r\n        setClonedArray(slicedArray)\r\n      }, disappearDelay);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [array, sliceNum, disappearDelay]);\r\n\r\n\r\n  return clonedArray\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { NUM_OF_DISP_RES_MOBILE, QUICK_SEARCH_TRANSITION } from 'Utils/Consts'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport useCreateArrayToDisplayAndFadeout from 'Hooks/SearchbarHooks/useCreateArrayToDisplayAndFadeout'\r\nimport GotoOtherRoutesHooks from 'Hooks/SearchbarHooks/useGotoOtherRoutes'\r\nimport PosterCard from 'ReusableComponents/PosterCard/PosterCard'\r\n\r\n\r\nexport default function ResultsMobile() {\r\n  const { searchbarText, pushToHistory, suggestions, showQuickSearchRes, setShowQuickSearchRes } = useContext(AppContext)\r\n  const {selectedMovieInQuickSearch} = GotoOtherRoutesHooks()\r\n  const displayedSuggestions = useCreateArrayToDisplayAndFadeout(suggestions, NUM_OF_DISP_RES_MOBILE, 800)\r\n\r\n  return (\r\n    <div\r\n      className={'ResultsMobile ' + \r\n      (showQuickSearchRes && searchbarText && 'fadeIn')} \r\n    >\r\n      <div className='searchbar_div'>\r\n        {displayedSuggestions.map(item => \r\n          <PosterCard \r\n            className='col-4'\r\n            cardData={item} \r\n            onClick={selectedMovieInQuickSearch}\r\n            cardTransitionDuration={QUICK_SEARCH_TRANSITION}\r\n            imgTransition={0.5}\r\n            imgHeight={'750'}\r\n            imgWidth={'500'}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div className='searchbar_li'>\r\n        <p \r\n          className='showMoreBtn'\r\n          onClick={() => pushToHistory(`/`)} \r\n          index={NUM_OF_DISP_RES_MOBILE}\r\n        >\r\n          show more\r\n        </p>\r\n        <p \r\n          className='showMoreClose'\r\n          onClick={() => setShowQuickSearchRes(false)}\r\n        >\r\n          close\r\n        </p>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\n\r\n\r\nexport default function HighlightTextInQuickSearchHooks() {\r\n  const { indexOfHighlightedMovie, setIndexOfHighlightedMovie } = useContext(AppContext)\r\n\r\n  function highligthText(text, highlight, index) {\r\n    const parts = text.split(new RegExp(`(${highlight})`, 'gi'))\r\n\r\n    return <span> { parts.map((part, i) => \r\n      <span \r\n        key={i} \r\n        style=\r\n        {(part.toLowerCase() === highlight.toLowerCase() && indexOfHighlightedMovie !== index)\r\n          ? { color: '#00FC87', fontWeight: 'bold' } \r\n          : part.toLowerCase() === highlight.toLowerCase() \r\n            ? { fontWeight: 'bold'}\r\n            : {}} \r\n      >\r\n        { part }\r\n      </span>)\r\n    } </span>;\r\n  }\r\n\r\n  const highlightMovieTextOnHover = e => {\r\n    setIndexOfHighlightedMovie(parseInt(e.target.getAttribute('index')))\r\n  }\r\n\r\n  return {highligthText, highlightMovieTextOnHover}\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { QUICK_SEARCH_TRANSITION } from 'Utils/Consts'\r\nimport HighlightTextInQuickSearchHooks from '../../Hooks/SearchbarHooks/useHighlightTextInQuickSearch'\r\nimport GotoOtherRoutesHooks from '../../Hooks/SearchbarHooks/useGotoOtherRoutes'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport ImageFadeIn from \"react-image-fade-in\"\r\nimport no_image from 'Images/no_image.png'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nPosterLi.propTypes = {\r\n  item: PropTypes.object,\r\n  index: PropTypes.number\r\n}\r\n\r\nexport default function PosterLi({item, index}) {\r\n  const { searchbarText, indexOfHighlightedMovie} = useContext(AppContext)\r\n\r\n  const {highligthText, highlightMovieTextOnHover} = HighlightTextInQuickSearchHooks()\r\n  const {selectedMovieInQuickSearch} = GotoOtherRoutesHooks()\r\n\r\n\r\n  return (\r\n    <AnimatePresence exitBeforeEnter>\r\n      <motion.li \r\n        className={'PosterLi ' + \r\n        (indexOfHighlightedMovie === index && 'active')}\r\n\r\n        onClick={() => selectedMovieInQuickSearch(item.id)}\r\n        onMouseEnter={highlightMovieTextOnHover} \r\n        index={index}\r\n        key={item.id}\r\n\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: QUICK_SEARCH_TRANSITION }}\r\n      >\r\n        <div className='row'>\r\n          <ImageFadeIn \r\n            className='col-lg-2 col-md-3 col-sm-4 col-3'\r\n            width='500'\r\n            height='750'\r\n            opacityTransition={0.5}\r\n            src={item.poster ? item.poster : no_image} \r\n            alt={`poster ${item.id}`}\r\n          />\r\n          <p className='col-lg-10 col-md-9 col-sm-8 col-9'>\r\n            {highligthText(item.title, searchbarText, index)}\r\n          </p>\r\n        </div>\r\n      </motion.li>\r\n      </AnimatePresence>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport 'styles/main.scss'\r\nimport { NUM_OF_DISP_RES_PC } from 'Utils/Consts'\r\nimport useHighlightTextInQuickSearch from 'Hooks/SearchbarHooks/useHighlightTextInQuickSearch'\r\nimport useCreateArrayToDisplayAndFadeout from 'Hooks/SearchbarHooks/useCreateArrayToDisplayAndFadeout'\r\nimport PosterLi from 'ReusableComponents/PosterLi/PosterLi'\r\nimport closeImg  from 'Images/close.svg'\r\n\r\n\r\nexport default function ResultsPC() {\r\n  const { searchbarText, pushToHistory, suggestions, showQuickSearchRes, setShowQuickSearchRes, indexOfHighlightedMovie  } = useContext(AppContext)\r\n  const {highlightMovieTextOnHover} = useHighlightTextInQuickSearch()\r\n  const displayedSuggestions = useCreateArrayToDisplayAndFadeout(suggestions, NUM_OF_DISP_RES_PC, 800)\r\n\r\n\r\n  return (\r\n    <ul \r\n      className={'ResultsPC ' + \r\n      (showQuickSearchRes && searchbarText && 'fadeIn')} \r\n    >\r\n        {displayedSuggestions.map((item, index) => \r\n          <PosterLi item={item} index={index} />\r\n        )}\r\n      {<li className='showMore'>\r\n        <p\r\n          className={'showMoreParagraph ' + \r\n          (indexOfHighlightedMovie === NUM_OF_DISP_RES_PC && 'active')}\r\n          // index={NUM_OF_DISP_RES_PC}\r\n          onMouseEnter={highlightMovieTextOnHover}\r\n          onClick={() => pushToHistory(`/`)} \r\n        >\r\n          show more\r\n        </p>\r\n        <img \r\n          className='closeImg'\r\n          src={closeImg} \r\n          onClick={() => setShowQuickSearchRes(false)}\r\n          alt=\"close search results\"\r\n        />\r\n      </li>}\r\n    </ul>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { QUICK_SEARCH_TRANSITION } from 'Utils/Consts'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\n\r\n\r\nexport default function UseSearchbarResultsTransition (Component) {\r\n  const { suggestions, showQuickSearchRes } = useContext(AppContext)\r\n\r\n  return (\r\n  <AnimatePresence exitBeforeEnter>\r\n    <motion.div\r\n      key={suggestions.length + showQuickSearchRes}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ \r\n        // turnary showQuickSearchRes makse results show instantly after clicking searchbar. \r\n        // suggestions.length > 0 speeds showing when we type first letter in searchbar\r\n        // normally we would have QUICK_SEARCH_TRANSITION delay \r\n        duration: (showQuickSearchRes && suggestions.length > 0)\r\n                  ? QUICK_SEARCH_TRANSITION : 0, \r\n        ease: 'easeInOut' \r\n      }}\r\n    >\r\n      {Component}\r\n    </motion.div>\r\n  </AnimatePresence>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport 'styles/main.scss'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport NoResult from 'ReusableComponents/NoResult/NoResult'\r\nimport ResultsMobile from './ResultsMobile'\r\nimport ResultsPC from './ResultsPC'\r\nimport useDelayShowNoResults from 'Hooks/SearchbarHooks/useDelayShowNoResults'\r\nimport useSearchbarResultsTransition from 'Hooks/SearchbarHooks/useSearchbarResultsTransition'\r\nimport { isMobile } from \"react-device-detect\"\r\n\r\n\r\nexport default function MovieSearchbarResults() {\r\n  const { searchbarText, suggestions, showQuickSearchRes, setShowQuickSearchRes } = useContext(AppContext)\r\n\r\n  const showNoResults = useDelayShowNoResults(1000, searchbarText)\r\n  \r\n  return (\r\n  <div className='SearchbarResults'>\r\n    {useSearchbarResultsTransition(\r\n      <>\r\n        {suggestions.length > 0 && showQuickSearchRes\r\n        ? isMobile ? <ResultsMobile/> : <ResultsPC/>\r\n        : <NoResult \r\n            className={isMobile ? 'ResultsMobile' : 'ResultsPC'}\r\n            fadeInConditionsArr={[showQuickSearchRes, searchbarText, showNoResults]}\r\n            onClose={setShowQuickSearchRes}\r\n            closeBtn={isMobile ? 'btn' : 'img'}\r\n          />\r\n        }\r\n      </>\r\n    )}\r\n  </div>\r\n  )\r\n}","import {useState, useEffect} from 'react'\r\n\r\nexport default function useDelayShowNoResults(msDelay, stringDependency) {\r\n  // delays showing of NoResults component fot \"msDelay\" miliseconds\r\n\r\n  const [showNoResults, setShowNoResults] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(stringDependency === ''){\r\n      setShowNoResults(false)\r\n    } else {\r\n      const timer = setTimeout(() => {\r\n        setShowNoResults(true)\r\n      }, msDelay);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [stringDependency, msDelay]);\r\n\r\n\r\n  return showNoResults\r\n}","import 'styles/main.scss'\r\nimport { useContext } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport Searchbar from 'ReusableComponents/Searchbar/Searchbar'\r\nimport useKeysPressedInSearchbar from 'Hooks/SearchbarHooks/useKeysPressedInSearchbar'\r\nimport useShowHideQuickSearch from 'Hooks/SearchbarHooks/useShowHideQuickSearch'\r\nimport SearchbarResults from './Results/SearchbarResults'\r\n\r\n\r\nexport default function NavSearchbar() {\r\n  const { location } = useContext(AppContext)\r\n  const enterKeyInSearchbar = useKeysPressedInSearchbar()\r\n  const {node, OnSearchBarClicked} = useShowHideQuickSearch()\r\n\r\n\r\n  return (\r\n    <div className='NavSearchbar' ref={node}>\r\n      <Searchbar\r\n        onClick={OnSearchBarClicked} \r\n        onKeyPress={enterKeyInSearchbar}\r\n      />\r\n      {location.pathname.includes('movie') \r\n      && <SearchbarResults />}\r\n    </div>\r\n  )\r\n}","import { useContext } from 'react'\r\nimport ArrowKeysReact from 'arrow-keys-react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport { NUM_OF_DISP_RES_PC } from 'Utils/Consts'\r\nimport GotoOtherRoutesHooks from './useGotoOtherRoutes'\r\n\r\n\r\nexport default function KeysPressedInSearchbarHooks() {\r\n  const { suggestions, pushToHistory, showQuickSearchRes, setShowQuickSearchRes, indexOfHighlightedMovie, setIndexOfHighlightedMovie} = useContext(AppContext)\r\n\r\n  const {selectedMovieInQuickSearch} = GotoOtherRoutesHooks()\r\n  \r\n  \r\n  function enterKeyInSearchbar(e){\r\n    const code = e.keyCode || e.which\r\n    if (code === 13 /* enter key */) {\r\n      if (!showQuickSearchRes) setShowQuickSearchRes(true)\r\n      if (showQuickSearchRes) {\r\n        if (indexOfHighlightedMovie === NUM_OF_DISP_RES_PC) {\r\n          pushToHistory(`/`)\r\n        } else {\r\n          selectedMovieInQuickSearch(suggestions[indexOfHighlightedMovie].id)\r\n        }\r\n      } \r\n    }\r\n  }\r\n\r\n  // Up and down arrow keys configuration\r\n  // allows using up and down key to select movie in quick search\r\n  ArrowKeysReact.config({\r\n    up: () => {\r\n      isNaN(indexOfHighlightedMovie)\r\n        ? setIndexOfHighlightedMovie(NUM_OF_DISP_RES_PC)\r\n        : indexOfHighlightedMovie < 0\r\n          ? setIndexOfHighlightedMovie(NUM_OF_DISP_RES_PC)\r\n          : setIndexOfHighlightedMovie(prevState => prevState - 1)\r\n    },\r\n    down: () => {\r\n      isNaN(indexOfHighlightedMovie)\r\n        ? setIndexOfHighlightedMovie(0)\r\n        : indexOfHighlightedMovie > NUM_OF_DISP_RES_PC\r\n          ? setIndexOfHighlightedMovie(0)\r\n          : setIndexOfHighlightedMovie(prevState => prevState + 1)\r\n    }\r\n  })\r\n\r\n\r\n  return enterKeyInSearchbar\r\n}","import { useEffect, useContext, useRef } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\n\r\nexport default function ShowHideQuickSearchHook() {\r\n  const { searchbarText, setSearchbarText, oldSearchbarText, setOldSearchbarText, showResInSearchBar, setShowQuickSearchRes } = useContext(AppContext)\r\n  const node = useRef()\r\n\r\n  function hideOnOutsideClick(e) {\r\n    if (!node.current.contains(e.target)){\r\n      setShowQuickSearchRes(false) \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', hideOnOutsideClick)\r\n    return () => {\r\n      // cleanup function - called when unmounted\r\n      document.removeEventListener('mousedown', hideOnOutsideClick)\r\n    }\r\n  }, [])\r\n\r\n  const OnSearchBarClicked = async e => {\r\n    setShowQuickSearchRes(true)\r\n    if (searchbarText === '') {\r\n      showResInSearchBar(oldSearchbarText)\r\n      setSearchbarText(oldSearchbarText)\r\n      setOldSearchbarText('')\r\n    }\r\n  }\r\n\r\n  return {node, OnSearchBarClicked}\r\n}","import 'styles/main.scss'\r\nimport menuIcon from 'Images/menu.svg'\r\nimport NavSearchbar from '../Searchbar/NavSearchbar'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Topbar({ openSidebar, gotoHome, gotoRegister, gotoLogin }) {\r\n  return (\r\n    <nav className='TopBar'>\r\n      <div className='TopBarContainer'>\r\n\r\n      <NavSearchbar/>\r\n\r\n        <div className='hamburgerIconContainer'>\r\n          <img \r\n            className='hamburgerIcon'\r\n            src={menuIcon} \r\n            alt='menuIcon' \r\n            onClick={() => openSidebar()}\r\n          />\r\n        </div>\r\n        <ul className='NavMenu'>\r\n          <li className='NavItem'>\r\n            <div \r\n              className='NavLink' \r\n              onClick={() => gotoHome()}>\r\n              Home\r\n            </div>\r\n          </li>\r\n          <li className='NavItem'>\r\n            <div \r\n              className='NavLink'\r\n              onClick={() => gotoRegister()}\r\n              >\r\n              Register\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <div className='NavBtn'>\r\n          <div \r\n            className='NavBtnLink' \r\n            onClick={() => gotoLogin()}\r\n          >\r\n            login\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import 'styles/main.scss'\r\nimport closeIcon from 'Images/close.svg'\r\n\r\n\r\nexport default function Sidebar({isOpen, close, gotoHome, gotoRegister, gotoLogin}) {\r\n  return (\r\n    <nav className={'Sidebar ' + (isOpen && 'openSidebar')}>\r\n      <div className='closeIconContainer'>\r\n        <img \r\n          src={closeIcon} \r\n          className='closeIcon'\r\n          alt='The Movie Database Logo' \r\n          onClick={()=> close()}\r\n        />\r\n      </div>\r\n      <div className=\"sidebarWrapper\">\r\n        <ul className=\"sidebarMenu\">\r\n          <div \r\n            className=\"sidebarLink\"\r\n            onClick={() => gotoHome()}>\r\n            Home\r\n          </div>\r\n          <div \r\n            className=\"sidebarLink\"\r\n            onClick={() => gotoRegister()}>\r\n            Register\r\n          </div>\r\n        </ul>\r\n        <div className=\"sidebarBtnWrap\">\r\n          <div \r\n            className='sidebarBtnLink' \r\n            onClick={() => gotoLogin()}>\r\n            Login\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import { useState } from 'react'\r\nimport { useContext } from 'react'\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport Topbar from './Topbar/Topbar'\r\nimport Sidebar from './Sidebar/Sidebar'\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar() {\r\n  const { pushToHistory, fetchPopularMoviesOnStartPage, setAllMoviesData,} = useContext(AppContext)\r\n\r\n\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false)\r\n\r\n  const closeSidebar = () => setIsSidebarOpen(false)\r\n  const openSidebar = () => setIsSidebarOpen(true)\r\n  \r\n  const gotoHome = () => {\r\n    setAllMoviesData([])\r\n    fetchPopularMoviesOnStartPage()\r\n    pushToHistory(`/`)\r\n    setIsSidebarOpen(false)\r\n  }\r\n\r\n  const gotoRegister = () => {\r\n    pushToHistory(`/register`)\r\n    setIsSidebarOpen(false)\r\n  }\r\n\r\n  const gotoLogin = () => {\r\n    pushToHistory(`/login`)\r\n    setIsSidebarOpen(false)\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Sidebar \r\n        isOpen={isSidebarOpen}\r\n        close={closeSidebar}\r\n        gotoHome={gotoHome}\r\n        gotoRegister={gotoRegister}\r\n        gotoLogin={gotoLogin}\r\n      />\r\n      <Topbar\r\n        openSidebar={openSidebar}\r\n        gotoHome={gotoHome}\r\n        gotoRegister={gotoRegister}\r\n        gotoLogin={gotoLogin}\r\n      />\r\n    </BrowserRouter>\r\n  )\r\n}","import React from 'react'\r\nimport './ErrorMsg.scss'\r\n\r\nexport default function ErrorMsg({children}) {\r\n  return (\r\n    <div className='error'>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import { FastField, ErrorMessage} from 'formik'\r\nimport ErrorMsg from './ErrorMsg/ErrorMsg'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Input({label, name, type, ...rest}) {\r\n  return (\r\n    <div className=\"formControl\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <FastField\r\n        id={name}\r\n        name={name}\r\n        type={type}\r\n        {...rest} />\r\n      <ErrorMessage \r\n        name={name}\r\n        component={ErrorMsg}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nInput.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n}","import { FastField, ErrorMessage} from 'formik'\r\nimport ErrorMsg from './ErrorMsg/ErrorMsg'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Select({label, name, options, ...rest}) {\r\n  return (\r\n    <div className=\"formControl\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <FastField\r\n        as='select'\r\n        id={name}\r\n        name={name}\r\n        {...rest}>\r\n        {\r\n          options.map(option => (\r\n            <option \r\n              key={option.value}\r\n              value={option.value}>\r\n              {option.key}\r\n            </option>\r\n          ))\r\n        }\r\n      </FastField>\r\n      <ErrorMessage \r\n        name={name} \r\n        component={ErrorMsg}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nSelect.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n}","import { FastField, ErrorMessage} from 'formik'\r\nimport ErrorMsg from './ErrorMsg/ErrorMsg'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Textarea({label, name, ...rest}) {\r\n  return (\r\n    <div className=\"formControl\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <FastField\r\n        as='textarea'\r\n        id={name}\r\n        name={name}\r\n        {...rest}/>\r\n      <ErrorMessage \r\n        name={name} \r\n        component={ErrorMsg}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nTextarea.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n}","import { FastField, ErrorMessage} from 'formik'\r\nimport ErrorMsg from './ErrorMsg/ErrorMsg'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function RadioButtons({label, name, options, ...rest}) {\r\n  return (\r\n    <div className=\"formControl\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <FastField\r\n        name={name}\r\n        {...rest}>\r\n        {\r\n          ({field}) => (\r\n            options.map(option => (\r\n              <div className='RadioBtnDiv' key=\r\n              {option.key}>\r\n                <label className='RadioBtnLabel' htmlFor={option.value}>\r\n                  {option.key}\r\n                </label>\r\n                <input\r\n                  type='radio'\r\n                  id={option.value}\r\n                  {...field} \r\n                  value={option.value}\r\n                  checked={field.value === option.value} />\r\n              </div>\r\n            ))\r\n          )\r\n        }\r\n      </FastField>\r\n      <ErrorMessage \r\n        name={name} \r\n        component={ErrorMsg}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nRadioButtons.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n}","import { FastField, ErrorMessage} from 'formik'\r\nimport ErrorMsg from './ErrorMsg/ErrorMsg'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function CheckboxGroup({label, name, options, ...rest}) {\r\n  return (\r\n    <div className=\"formControl\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <FastField\r\n        name={name}\r\n        {...rest}>\r\n        {\r\n          ({field}) =>{\r\n          // console.log('field', field)\r\n           return(\r\n            options.map(option => (\r\n              <div key={option.key}>\r\n                <input\r\n                  type='checkbox'\r\n                  id={option.value}\r\n                  {...field} \r\n                  value={option.value}\r\n                  checked={field.value && field.value.includes(option.value)} \r\n                />\r\n                <label htmlFor={option.value}>\r\n                  {option.key}\r\n                </label>\r\n              </div>\r\n            ))\r\n          )}\r\n        }\r\n      </FastField>\r\n      <ErrorMessage \r\n        name={name} \r\n        component={ErrorMsg}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nCheckboxGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n}","import PropTypes from 'prop-types'\r\nimport Input from './Templates/Input'\r\nimport Select from './Templates/Select'\r\nimport Textarea from './Templates/Textarea'\r\nimport RadioButtons from './Templates/RadioButtons'\r\nimport CheckboxGroup from './Templates/CheckboxGroup'\r\n\r\nexport default function FormikControl({control, ...rest}) {\r\n  switch(control) {\r\n    case 'input': return <Input {...rest} />\r\n    case 'textarea': return <Textarea {...rest} />\r\n    case 'select': return <Select {...rest} />\r\n    case 'radio': return <RadioButtons {...rest} />\r\n    case 'checkbox': return <CheckboxGroup {...rest} />\r\n    default: return null\r\n  }\r\n}\r\n\r\nFormikControl.propTypes = {\r\n  control: PropTypes.string.isRequired,\r\n  \r\n  // PropTypes used in children components\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  options: PropTypes.array,\r\n}","import { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from '../FormikControl/FormikControl'\r\nimport 'styles/main.scss'\r\n\r\n\r\nexport default function Register() {\r\n  const initialValues = {\r\n    email: '',\r\n    password: '',\r\n  }\r\n\r\n  // remember to comment out validation that is not used because form will not submit\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email('Invalid email format').required('Required'),\r\n    password: Yup.string().required('Required'),\r\n  })\r\n  \r\n  const onSubmit = (values, onSubmitProps) => {\r\n    console.log('Form data', values)\r\n    // wait for API response and then submit\r\n    onSubmitProps.setSubmitting(false)  //enables button\r\n  }\r\n\r\n\r\nreturn (\r\n  <div className='Register'>\r\n    <h2>Register Page</h2>\r\n    <Formik \r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n      enableReinitialize\r\n    >\r\n    {\r\n    formik => {\r\n      // console.log(formik)\r\n      return (\r\n      <div className='FormContainer'>\r\n        {/* <h3>{islogged ? 'Logged in' : 'Not logged in'}</h3> */}\r\n          <Form className=\"form\">\r\n\r\n            <FormikControl \r\n              control='input' \r\n              type='email'\r\n              name='email'\r\n              label='email' />\r\n\r\n            <FormikControl \r\n              control='input' \r\n              type='password'\r\n              name='password'\r\n              label='password' />\r\n\r\n            <button \r\n              className=\"btn btn-success btn-green\"\r\n              type='submit'\r\n              disabled={!formik.isValid || formik.isSubmitting}\r\n              >Log In\r\n            </button>\r\n          </Form>\r\n        </div>\r\n        )}\r\n      }\r\n    </Formik>\r\n  </div>\r\n)\r\n}","import { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from '../FormikControl/FormikControl'\r\nimport 'styles/main.scss'\r\n\r\n\r\nexport default function Login() {\r\n  const initialValues = {\r\n    email: '',\r\n    password: '',\r\n  }\r\n\r\n  // remember to comment out validation that is not used because form will not submit\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email('Invalid email format').required('Required'),\r\n    password: Yup.string().required('Required'),\r\n  })\r\n  \r\n  const onSubmit = (values, onSubmitProps) => {\r\n    console.log('Form data', values)\r\n    // wait for API response and then submit\r\n    onSubmitProps.setSubmitting(false)  //enables button\r\n  }\r\n\r\n\r\nreturn (\r\n  <div className='Login'>\r\n    <h2>Login Page</h2>\r\n    <Formik \r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n      enableReinitialize\r\n    >\r\n    {\r\n    formik => {\r\n      // console.log(formik)\r\n      return (\r\n      <div className='FormContainer'>\r\n        {/* <h3>{islogged ? 'Logged in' : 'Not logged in'}</h3> */}\r\n          <Form className=\"form\">\r\n\r\n            <FormikControl \r\n              control='input' \r\n              type='email'\r\n              name='email'\r\n              label='email' />\r\n\r\n            <FormikControl \r\n              control='input' \r\n              type='password'\r\n              name='password'\r\n              label='password' />\r\n\r\n            <button \r\n              className=\"btn btn-success btn-green\"\r\n              type='submit'\r\n              disabled={!formik.isValid || formik.isSubmitting}\r\n              >Log In\r\n            </button>\r\n          </Form>\r\n        </div>\r\n        )}\r\n      }\r\n    </Formik>\r\n  </div>\r\n)\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport 'styles/main.scss'\r\nimport { Route, Switch, useLocation, useHistory } from 'react-router-dom'\r\nimport { AnimatePresence } from \"framer-motion\"\r\nimport { AppContext } from 'AppFiles/Contexts/AppContext'\r\nimport AppScroolbar from 'ReusableComponents/Scroolbar/AppScrollbar'\r\nimport { getMoviesDataToDisplayInSearch, getAllMoviesData, getMovieData, createSearchMoviesUrl, setInitMovieID } from 'Utils/FetchFunctions'\r\nimport { POPULAR_MOVIES_URL, BASE_BG_IMG_URL } from 'Utils/Consts'\r\nimport { getCurrentPageUrl, getMovieIdFromLocationPathname } from 'Utils/RoutesFunctions'\r\nimport ArrowKeysReact from 'arrow-keys-react'\r\nimport AppBackground from 'ReusableComponents/AppBackground/AppBackground'\r\nimport StartPage from 'AppFiles/StartPage/StartPage'\r\nimport MoviePage from 'AppFiles/Movie/MoviePage'\r\nimport { isMobile } from \"react-device-detect\"\r\nimport BgGreen from 'Images/BgGreen.jpg'\r\nimport Navbar from 'AppFiles/Navbar/Navbar'\r\nimport Register from 'AppFiles/Forms/Register/Register'\r\nimport Login from 'AppFiles/Forms/Login/Login'\r\n\r\n\r\nexport default function App () {\r\n  const location = useLocation()  // key to app routes\r\n  const history = useHistory()\r\n  const pushToHistory = url => history.push(url)\r\n\r\n\r\n// ==== Fetch StartPage ====\r\n  const [backgroundIMG, setBackgroundIMG] = useState()\r\n  const [suggestions, setSuggestions] = useState([])\r\n  const [searchbarText, setSearchbarText] = useState('')\r\n\r\n  async function fetchPopularMoviesOnStartPage() {\r\n    setSuggestions(await getMoviesDataToDisplayInSearch(POPULAR_MOVIES_URL))\r\n  }\r\n\r\n  // if search is empty on main page it displays popular movies\r\n  // loads at page starup because searchbarText === '' at start\r\n  // checks this condition every time\r\n  useEffect(() => {\r\n    if(searchbarText === '' && location.pathname ==='/') fetchPopularMoviesOnStartPage()\r\n    else if(searchbarText === '') {\r\n      setTimeout(() => {\r\n        setSuggestions([])\r\n      }, 600) // debounc time + animation time\r\n    }\r\n  }, [searchbarText])\r\n// ==== END Fetch StartPage ====\r\n\r\n\r\n// ==== Fetch movie page based on movieID parameter ====\r\n  const [movieID, setMovieID] = useState(() => setInitMovieID(location))\r\n  const [movieData, setMovieData] = useState({})\r\n  \r\n  useEffect(async () => {\r\n    movieID && setMovieData(await getMovieData(movieID))\r\n  }, [movieID])\r\n\r\n  // implements back button in browser\r\n  // allows to go back to previous movie on moviePage\r\n  useEffect(() => {\r\n    if(location.pathname === '/' && !searchbarText){\r\n      fetchPopularMoviesOnStartPage()\r\n    }else{\r\n      setMovieID(getMovieIdFromLocationPathname(location))\r\n    }\r\n  }, [location.pathname])\r\n  \r\n// ==== END Fetch movie page ====\r\n\r\n\r\n\r\n// ==== Search state and functions ====\r\n  const [allMoviesData, setAllMoviesData] = useState([])\r\n  const [oldSearchbarText, setOldSearchbarText] = useState('')\r\n  const [dispPostersNum, setDispPostersNum] = useState(isMobile ? 9 : 12)\r\n\r\n  const onSearchbarTextChanging = e => {\r\n    const value = e.target.value.replace(/[^\\w\\s]/gi, '')\r\n    setSearchbarText(value)\r\n    showResInSearchBar(value)\r\n  }\r\n\r\n  const showResInSearchBar = async (value) => {\r\n    setDispPostersNum(isMobile ? 6 : 12)\r\n    if (value.length === 0) setOldSearchbarText('')\r\n    if (value.length >= 1) {\r\n      const allMoviesData = await getAllMoviesData(createSearchMoviesUrl(value))\r\n      const dataToDisplay = await getMoviesDataToDisplayInSearch(allMoviesData)\r\n\r\n      setAllMoviesData(allMoviesData)\r\n      setSuggestions(dataToDisplay)\r\n      setOldSearchbarText(value)\r\n    }\r\n    \r\n    isMobile && setTimeout(() => {\r\n      setDispPostersNum(9)\r\n    }, 1000) // adds 3 more posters\r\n  }\r\n\r\n  // State of MovieSeachbar\r\n  const [showQuickSearchRes, setShowQuickSearchRes] = useState(false)\r\n  const [indexOfHighlightedMovie, setIndexOfHighlightedMovie] = useState()\r\n  \r\n  // ==== END Search state and functions ====\r\n\r\n  \r\n  // == ScrollBar stuff ==\r\n  const infiniteScroll = e => {\r\n    // console.log('infinite Scroll')\r\n    setDispPostersNum(20)\r\n  }\r\n\r\n  const scrollBarRef = useRef(null)\r\n  // == END ScrollBar stuff ==\r\n\r\n\r\n// ==== Console log stuff ====\r\n  useEffect(() => {\r\n    console.log({suggestions})\r\n  }, [suggestions])\r\n\r\n  useEffect(() => {\r\n    console.log({movieData})\r\n    setBackgroundIMG(movieData.backdrop_path && `${BASE_BG_IMG_URL}${movieData.backdrop_path}`)\r\n  }, [movieData])\r\n\r\n  useEffect(() => {\r\n    console.log(`searchbarText: ${searchbarText}`)\r\n  }, [searchbarText])\r\n\r\n  // useEffect(() => {\r\n  //   console.log(`backgroundIMG: ${backgroundIMG}`)\r\n  // }, [backgroundIMG])\r\n\r\n// ==== END Console log stuff ====\r\n\r\n\r\n  return (\r\n    <div>\r\n      <AppBackground \r\n        fetchImg={backgroundIMG} \r\n        fallbackImg={BgGreen}\r\n      />\r\n\r\n      <div\r\n        id='app'\r\n        {...ArrowKeysReact.events}\r\n        tabIndex='1'\r\n      >\r\n        <AppContext.Provider \r\n          value={{movieID, movieData, searchbarText, setSearchbarText, oldSearchbarText, setOldSearchbarText, suggestions, setSuggestions,  onSearchbarTextChanging, allMoviesData, setAllMoviesData, setMovieID, fetchPopularMoviesOnStartPage, showResInSearchBar, history, location, pushToHistory, dispPostersNum, setDispPostersNum, infiniteScroll, scrollBarRef, showQuickSearchRes, setShowQuickSearchRes, indexOfHighlightedMovie, setIndexOfHighlightedMovie}}\r\n        >\r\n          <AppScroolbar>\r\n          <Navbar/>\r\n            <AnimatePresence exitBeforeEnter>\r\n              <Switch \r\n                location={location} \r\n                key={getCurrentPageUrl(location)}\r\n              >\r\n                <Route exact path='/' render={() => <StartPage/>} />\r\n                <Route exact path={`/movie/:${movieID}`} render={() => <MoviePage/>} />\r\n                <Route exact path={`/register`} render={() => <Register/>} />\r\n                <Route exact path={`/login`} render={() => <Login/>} />\r\n              </Switch>\r\n            </AnimatePresence>\r\n          </AppScroolbar>\r\n        </AppContext.Provider>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport App from 'App'\r\nimport * as serviceWorker from 'testingFiles/serviceWorker'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}